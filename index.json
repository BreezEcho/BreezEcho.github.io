[{"categories":["documentation"],"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it.","date":"2020-03-06","objectID":"/theme-documentation-basics/","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:0:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"1 Requirements Thanks to the simplicity of Hugo, Hugo is the only dependency of this theme. Just install latest version of  Hugo (\u003e 0.62.0) for your OS (Windows, Linux, macOS). Why not support earlier versions of Hugo? Since Markdown Render Hooks was introduced in the Hugo Christmas Edition, this theme only supports Hugo versions above 0.62.0. Hugo extended version is recommended Since some features of this theme need to processes  SCSS to  CSS, it is recommended to use Hugo extended version for better experience. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:1:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2 Installation The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.1 Create Your Project Hugo provides a new command to create a new website: hugo new site my_website cd my_website ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.2 Install the Theme The LoveIt theme’s repository is: https://github.com/dillonzq/LoveIt. You can download the latest release  .zip file of the theme and extract it in the themes directory. Alternatively, clone this repository to the themes directory: git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt Or, create an empty git repository and make this repository a submodule of your site directory: git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.3 Basic Configuration The following is a basic configuration for the LoveIt theme: baseURL = \"http://example.org/\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" # website title title = \"My New Hugo Site\" # language code [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"en\" # language name [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"English\" # Author config [author] name = \"xxxx\" email = \"\" link = \"\" # Menu config [menu] [[menu.main]] weight = 1 identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" # Markup related configuration in Hugo [markup] # Syntax Highlighting (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false is a necessary configuration (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false Note When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.4 Create Your First Post Here is the way to create your first post: hugo new posts/first_post.md Feel free to edit the post file by adding some sample content and replacing the title value in the beginning of the file. Note By default all posts and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata, set the property draft: false or add -D/--buildDrafts parameter to hugo command. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:4","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.5 Launching the Website Locally Launch by using the following command: hugo serve Go to http://localhost:1313. Basic configuration preview Tip When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Note Since the theme use .Scratch in Hugo to implement some features, it is highly recommended that you add --disableFastRender parameter to hugo server command for the live preview of the page you are editing. hugo serve --disableFastRender ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:5","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.6 Build the Website When your site is ready to deploy, run the following command: hugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server. Tip The website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use AWS Amplify, Github pages, Render and more… ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:6","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3 Configuration ","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.1 Site Configuration In addition to Hugo global configuration and menu configuration, LoveIt lets you define the following parameters in your site configuration (here is a config.toml, whose values are default). Please open the code block below to view the complete sample configuration : baseURL = \"http://example.org/\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" # website title title = \"My New Hugo Site\" # language code [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"en\" # language name [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"English\" # whether to include Chinese/Japanese/Korean hasCJKLanguage = false # default amount of posts in each pages paginate = 12 # google analytics code [UA-XXXXXXXX-X] googleAnalytics = \"\" # copyright description used only for seo schema copyright = \"\" # whether to use robots.txt enableRobotsTXT = true # whether to use git commit log enableGitInfo = true # whether to use emoji code enableEmoji = true # ignore some build errors ignoreErrors = [\"error-remote-getjson\", \"error-missing-instagram-accesstoken\"] # Author config [author] name = \"xxxx\" email = \"\" link = \"\" # Menu config [menu] [[menu.main]] weight = 1 identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" [params] # site default theme [\"auto\", \"light\", \"dark\"] defaultTheme = \"auto\" # public git repo url only then enableGitInfo is true gitRepo = \"\" # which hash function used for SRI, when empty, no SRI is used # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"\" # date format dateFormat = \"2006-01-02\" # website title for Open Graph and Twitter Cards title = \"My cool site\" # website description for RSS, SEO, Open Graph and Twitter Cards description = \"This is my cool site\" # website images for Open Graph and Twitter Cards images = [\"/logo.png\"] # Header config [params.header] # desktop header mode [\"fixed\", \"normal\", \"auto\"] desktopMode = \"fixed\" # mobile header mode [\"fixed\", \"normal\", \"auto\"] mobileMode = \"auto\" # Header title config [params.header.title] # URL of the LOGO logo = \"\" # title name name = \"\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" # whether to use typeit animation for title name typeit = false # Footer config [params.footer] enable = true # Custom content (HTML format is supported) custom = '' # whether to show Hugo and theme info hugo = true # whether to show copyright info copyright = true # whether to show the author author = true # Site creation time since = 2019 # ICP info only in China (HTML format is supported) icp = \"\" # license info (HTML format is supported) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (all posts) page config [params.section] # special amount of posts in each section page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # List (category or tag) page config [params.list] # special amount of posts in each list page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # App icon config [params.app] # optional site title override for the app when added to an iOS home screen or Android launcher title = \"My cool site\" # whether to omit favicon resource links noFavicon = false # modern SVG favicon to use","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.2 Favicons, Browserconfig, Manifest It is recommended to put your own favicons: apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) into /static. They’re easily created via https://realfavicongenerator.net/. Customize browserconfig.xml and site.webmanifest to set theme-color and background-color. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.3 Style Customization Note Hugo extended version is necessary for the style customization. LoveIt theme has been built to be as configurable as possible by defining custom .scss style files. The directory including the custom .scss style files is assets/css relative to your project root directory. In assets/css/_override.scss, you can override the variables in themes/LoveIt/assets/css/_variables.scss to customize the style. Here is a example: @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; In assets/css/_custom.scss, you can add some css style code to customize the style. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4 Multilingual and i18n LoveIt theme is fully compatible with Hugo multilingual mode, which provides in-browser language switching. Language Switch ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.1 Compatibility Language Hugo Code HTML lang Attribute Theme Docs Lunr.js Support English en en Simplified Chinese zh-cn zh-CN Traditional Chinese zh-tw zh-TW French fr fr Polish pl pl Brazilian Portuguese pt-br pt-BR Italian it it Spanish es es German de de German de de Serbian sr sr Russian ru ru Romanian ro ro Vietnamese vi vi Arabic ar ar Catalan ca ca Thai th th Telugu te te Indonesian id id Turkish tr tr Korean ko ko Hindi hi hi ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.2 Basic Configuration After learning how Hugo handle multilingual websites, define your languages in your site configuration. For example with English, Chinese and French website: # determines default content language [\"en\", \"zh-cn\", \"fr\", \"pl\", ...] defaultContentLanguage = \"en\" [languages] [languages.en] weight = 1 title = \"My New Hugo Site\" languageCode = \"en\" languageName = \"English\" [[languages.en.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" [[languages.en.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[languages.en.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" [languages.zh-cn] weight = 2 title = \"我的全新 Hugo 网站\" languageCode = \"zh-CN\" languageName = \"简体中文\" hasCJKLanguage = true [[languages.zh-cn.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"文章\" url = \"/posts/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [languages.fr] weight = 3 title = \"Mon nouveau site Hugo\" languageCode = \"fr\" languageName = \"Français\" [[languages.fr.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Postes\" url = \"/posts/\" title = \"\" [[languages.fr.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Balises\" url = \"/tags/\" title = \"\" [[languages.fr.menu.main]] weight = 3 identifier = \"categories\" name = \"Catégories\" pre = \"\" post = \"\" url = \"/categories/\" title = \"\" Then, for each new page, append the language code to the file name. Single file my-page.md is split in three files: in English: my-page.en.md in Chinese: my-page.zh-cn.md in French: my-page.fr.md Note Be aware that only translated pages are displayed in menu. It’s not replaced with default language content. Tip Use Front Matter parameter to translate urls too. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.3 Overwrite Translation Strings Translations strings are used for common default values used in the theme. Translations are available in some languages, but you may use another language or want to override default values. To override these values, create a new file in your local i18n folder i18n/\u003clanguageCode\u003e.toml and inspire yourself from themes/LoveIt/i18n/en.toml. By the way, as these translations could be used by other people, please take the time to propose a translation by  making a PR to the theme! ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"5 Search Based on Lunr.js or algolia, searching is supported in LoveIt theme. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:5:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"5.1 Output Configuration In order to generate index.json for searching, add JSON output file type to the home of the outputs part in your site configuration. [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"2020-03-06","objectID":"/theme-documentation-basics/:5:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"5.2 Search Configuration Based on index.json generated by Hugo, you could activate searching. Here is the search configuration in your site configuration: [params.search] enable = true # type of search engine [\"lunr\", \"algolia\"] type = \"lunr\" # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \"\" # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \"em\" # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" How to choose search engine? The following is a comparison of two search engines: lunr: simple, no need to synchronize index.json, no limit for contentLength, but high bandwidth and low performance (Especially for Chinese which needs a large segmentit library) algolia: high performance and low bandwidth, but need to synchronize index.json and limit for contentLength The content of the post is separated by h2 and h3 HTML tag to improve query performance and basically implement full-text search. contentLength is used to limit the max index length of the part starting with h2 and h3 HTML tag. Tips about algolia You need to upload index.json files to algolia to activate searching. You could upload the index.json files by browsers but a CLI tool may be better. The official Algolia CLI is a good choice. To be compatible with Hugo multilingual mode, you need to upload different index.json for each language to the different index of algolia, such as zh-cn/index.json or fr/index.json… ","date":"2020-03-06","objectID":"/theme-documentation-basics/:5:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["保研"],"content":"基本背景 上海大学钱伟长学院生物工程专业 GPA：3.79/4.00；92.93/100.00 Rank：2/18；1/6（推免排名） 英语：CET4:580；CET6：584 奖惩记录：2019-2021两年学业特等奖学金；上海大学优秀学生；公益爱心奖学金； 志愿者：志愿服务时长70+；疫情防控志愿者 科研/竞赛：主要参与3个项目 全国大学生生命科学竞赛上海市三等奖； 上海大学本科生学术论坛三等奖（2个）； 上海大学钱伟长学院本科生科研创新论坛二等奖、三等奖； 大创校级立项 一篇SCI五作（6月发表） 个人认为科研竞赛真的很重要，尤其是基础学科，建议学弟学妹们早早进实验室与老师沟通参加科研项目，能有成果最好，即使最后没有落得什么文章奖项等成果，也会让你在无形中学习到很多，尤其是立志于深造的同学，在参与项目过程中会受益匪浅。而且保研面试本专业也基本是根据你的科研项目经历进行提问，在这方面有经历可讲才会让老师提起对你的兴趣。 ","date":"2022-10-25","objectID":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/:1:0","tags":["19级","保研","钱院","生物工程","上海交通大学"],"title":"19-张雅婧-生物工程-保研-上海交通大学","uri":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/"},{"categories":["保研"],"content":"申请流程与结果 最终录取：上海交通大学-医学院-基础医学部直博 学校 入营 参营 优营 录取 上海交通大学医学院 ✔️ ✔️ ✔️ ✔️ 浙江大学基础医学院 ✔️ ✔️ 浙江大学转化医学研究院 ✔️ ✔️ ✔️（无效力） 中科院分子细胞卓越中心 ✔️ ✔️ 南开生科院 ✔️ ✔️ ✔️ 厦大生科院 ✔️ 中科大生命医学部 ✔️ ✔️ ✔️ 同济生科院 ✔️ 四川大学卫健委移植重点实验室 ✔️ ✔️ ✔️ 四川大学生物治疗 ✔️ 华东师大生科院 ✔️ ✔️ ✔️ 北京协和医学院 ✔️ ✔️ 北京大学医学院（预推免） ✔️ ✔️ 夏令营被拒的学校：北大生科院、北京生命科学研究所（包含timbr）、清华四方招生（cls）、上交生科院、复旦生科院、复旦基础医、北大未来技术学院、同济医学院、中山大学医学院、南大生科院、武大生科院、北大前沿交叉学科（cls）、清北北生所联培（ptn） 预推免被拒的学校：清华四方招生 这样总结出来还真的很感慨，幸好最后的结果没有辜负自己，祝大家猛猛投，最后都能如愿上岸。（而且可以看出入营有点玄学） ","date":"2022-10-25","objectID":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/:2:0","tags":["19级","保研","钱院","生物工程","上海交通大学"],"title":"19-张雅婧-生物工程-保研-上海交通大学","uri":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/"},{"categories":["保研"],"content":"1. 信息收集 关注公众号，保研论坛以及学校官网，目标院校的官网一定要多看看。我个人整理的方法是做一个excel，把目标院校、截止时间、公告链接和所需材料都整理出来，然后报完一个就把这行背景改一下。 ","date":"2022-10-25","objectID":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/:2:1","tags":["19级","保研","钱院","生物工程","上海交通大学"],"title":"19-张雅婧-生物工程-保研-上海交通大学","uri":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/"},{"categories":["保研"],"content":"2. 材料准备 简历：网上有模板，比较简单，没有什么太多说法，排班整齐，斟酌一下怎么凸显自己的竞争力即可。 个人陈述：不同学校报名要求不同，大致分为1500字、1000字、700字，可以写好一篇1500字后根据不同学校要求进行适当删减。讲清楚自己大学的一些经历即可，主要是突出学习能力、科研经历等，可以去知乎借鉴一下。 专家推荐信：注意与老师沟通的礼貌性，也不需要害怕老师，老师都很友善很乐意帮助。 上述是需要自己着手准备的文书材料，我觉得比较简单，不像一些卖课保研公众号说的那样需要为之焦虑，主要还是取决于自己真正的能力以及经历，适当的修饰一下辞藻就好。 申请表：仔细看不同学校的盖章要求，例如是学院章还是教务部门的章 成绩证明：查成绩网站即可下载 在读证明：有的学校需要，我当时疫情期间给xjk@oa.shu.edu.cn发邮件，说清楚理由附带学生证截图即可获得。 ","date":"2022-10-25","objectID":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/:2:2","tags":["19级","保研","钱院","生物工程","上海交通大学"],"title":"19-张雅婧-生物工程-保研-上海交通大学","uri":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/"},{"categories":["保研"],"content":"3. 系统填报 不同学校不同系统这一点真的有点烦，希望各学校夏令营网站早日实现大一统，但是一定要耐心仔细的填完，不能让自己的大好未来折在这一步。有不懂的有关填报的问题可以积极和招生老师交流（公告里会有老师联系方式），确保填报无误。 ","date":"2022-10-25","objectID":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/:2:3","tags":["19级","保研","钱院","生物工程","上海交通大学"],"title":"19-张雅婧-生物工程-保研-上海交通大学","uri":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/"},{"categories":["保研"],"content":"4. 等待入营结果 部分良心学校会发邮件通知，但也有的学校会默拒，时刻关注学校官网出的入营名单，防止入营但是错过确认和加群。 ","date":"2022-10-25","objectID":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/:2:4","tags":["19级","保研","钱院","生物工程","上海交通大学"],"title":"19-张雅婧-生物工程-保研-上海交通大学","uri":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/"},{"categories":["保研"],"content":"5. 面试 大多数学校都是三分钟自我介绍（少数学校明确要求英文）+专业英语文献翻译+导师提问（中、英文）+（极少数）笔试 自我介绍：建议准备中英文两版，熟读记忆，准备ppt。多数学校可以放映ppt，少数学校不可以，ppt个人认为中文即可，有的学校要求英文也只是要求英文讲述，对自己英语不太自信的同学可能担心自己英文发音不好，老师听不清的话甚至可以用中文ppt来帮助老师理解。 专业知识：英文文献翻译，这个真是靠平常积累，学弟学妹们可以从现在做起多找英文文献读。 提问环节：提问大多数没有专业知识提问，所以不用过分焦虑，有一定的知识体系即可。问题基本都是围绕着自我介绍及ppt内容提的，例如一些科研经历，所以一定要好好熟悉并且研读自己的科研和文章，尤其掌握创新点、所用的实验方法、一些重点步骤的具体操作。不过以我的经历不需要严格记忆数据结果这些十分具体的，很少有老师会问，有余力可以记忆一下最重要的几个数据（例如科研是疾病检测，可以记一下检测物质的浓度等）。还有很多问题会围绕所选择的研究方向的意向，建议深刻学习理解一下自己的意向专业及方向是干什么的，应对老师一些你为什么选择这个专业和方向、你对这个方向有什么看法等问题要有一套话术。还有可以看一下自己填的意向导师的研究领域，有余力可以挑一篇文献看看，对意向导师要有一定的了解会给自己加分不少。英文对话部分学校有，一般不会用英文问太难的问题，以我六级580+的分数参考，我觉得听懂不难，难在自己的表述（我的口语可能有所欠缺）流畅，我觉得可以自己设想问题编一些答案提前背好，即使不会遇到原问题也可以有一定的内容的储备。 ","date":"2022-10-25","objectID":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/:2:5","tags":["19级","保研","钱院","生物工程","上海交通大学"],"title":"19-张雅婧-生物工程-保研-上海交通大学","uri":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/"},{"categories":["保研"],"content":"6. 联系导师 首先申明，联系导师放在面试之后不是说面试后再联系导师。有的学校的夏令营活动很注重联系导师（例如浙大，面试时候几乎只提问了你联系导师了吗），甚至有的夏令营直接变成自己联系导师，导师自己组织面试，无统一面试排名，这种情况一定要去联系导师。其他的个人认为如果比较稳并且不是特别想去的学校没有必要联系，梦校或是前一种情况可以尝试联系一下。我参加预推免比较少，感觉预推免前联系一下导师作用比较大，这个时候老师有被鸽的可能性，可以抓住这个时机去找下老师。 ","date":"2022-10-25","objectID":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/:2:6","tags":["19级","保研","钱院","生物工程","上海交通大学"],"title":"19-张雅婧-生物工程-保研-上海交通大学","uri":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/"},{"categories":["保研"],"content":"7. 预推免 八月末九月初预推免开始报名，流程基本与夏令营相同，考核在专业知识的比重相对会加大一点，会出一些意向专业相关的专业知识提问。 我参加某些学校的一些具体经历： 浙大转化院：夏令营应该是报名即可进，无门槛，优营没有效力，需要继续参加预推免，无夏令营统一面试，由导师自行组织面试。这种大家一定要好好去了解导师，看几篇老师近年发表的文章。我面试的时候没有注意这一点，老师问我为什么选择他们课题组的时候完全前言不搭后语，面的很糟糕。 浙大基础医学院：自我介绍要求包含3min的英文。面试老师只问了我有没有联系导师的问题，后来与同学交流发现他也是这样，说是联系好导师沟通好后就基本稳了。 中科院分子细胞所：英文自我介绍+英文提问（自我优势这类问题）+导师提问。老师没有提前说需要英文自我介绍，面试时候临时说英文，全靠我之前已经面试很多次完全熟悉了我的英文自我介绍稿，所以还是要两手准备，中英文自我介绍是绝对不可少的。据我了解这是中科院系统里生物方向最好的院所，有志于进中科院等研究院的可以积极投递，我遇到的面试老师也很温柔，这样的面试真的是让人如沐春风。 上海交通大学基础医学院：是我参加的唯一需要笔试的学校，我当时非常担心对专业知识的考核，但是这场笔试其实对专业知识的考核不多，更多的是对英文和思维的考核。但是这一点不同学校也不同，有参加同济生科院的同学说他们笔试对专业知识的考核比较多。面试流程是先英文自我介绍，老师轮流提问。体验感很好（指的是流程很规整，不会让你感觉到老师没有问题问，对你不感兴趣这方面），每个老师差不多两个问题，问的很全面，最后有个老师用英文提问。还有交大让我又爱又恨的一点是，夏令营优营有等级之分，A等直博，B等研究生等。夏令营7月结束后结果只出了一个专业内排名，最终的优营等级是九月中旬才公布的，虽然我理解是为了明确今年的招生名额后才公布，不会海发优营，但是足足两个月的等待真的很煎熬。 北大医学部：自我介绍+专业知识提问+专业英语文献翻译+导师提问。唯一参加的一个预推免。据我了解北大医学部的夏令营优营也需要参加预推免，所以很可能是走个过场，最终我也没有通过面试。 ","date":"2022-10-25","objectID":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/:2:7","tags":["19级","保研","钱院","生物工程","上海交通大学"],"title":"19-张雅婧-生物工程-保研-上海交通大学","uri":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/"},{"categories":["保研"],"content":"个人心得 部分心得在上述过程中已经说了。 还想提醒大家的一些点： 要学会收集信息，保研过程中需要收集很多信息，报名高峰期几乎每天都在关注各种保研信息。互联网如此发达，可以高效应用某乎、小某书等软件收集信息。可以联系直系学长学姐询问，也可以通过网络去问一些网友。比如我就通过小某书刷到了去年保交医的学姐。 个人认为面试这件事情，很吃经验，前几场面试肯定会些许局促，但是后面的面试就会感觉自己渐入佳境。建议每场面试完了都要进行复盘。我个人方法是每次面试完都记录一下这场面试的问题，然后想一下怎样可以更好的回答。这样一场场积累下来，你就会对大部分问题都有一定的准备。其实会发现老师们所感兴趣的点都差不多，对后续面试帮助很大。每场面试前我还会根据我的经验自己演习一下，会想象老师会问什么问题，然后我该怎么回答，我觉得这个真的很有用！也是运气加成吧，交大面试遇到的好几个问题都是我前晚设想过的。 关于海投：个人认为，一定要海投！第一，每年形势不同，你无法通过学长学姐的结果精准定位，如果认定很少的几个学校投递的话风险较大。第二，投递的材料基本相同，重复的投递不会耗费很多时间，但是可以给你带来更多的机会以及大量面试经验。但是向上的学校可以多冲一冲，向下海投的不要太离谱，那些肯定不会去的学校还是把机会留给真正需要的人吧。 保研后期，如果有确定offer，请尽快推掉其他学校，不然临近截止才鸽掉老师以及院校，会影响同届很多人，并且很可能会影响下一届学弟学妹们入围这些学校。 专业相关。生物专业其实保研挺占优势，竞争相对来说小一点，而且有的一个学校有很多个学院可以投递，加起来会有很多机会。所以再次强调，一定要海投！一个学校也可以投三四个学院，大胆投！ 我有听说过交大有的学院是你没有获得优营的话，可以去联系导师是否愿意接受你作为直博生，如果成功的话，相当于你会被补录进优营吧，所以联系导师还是有一定效用。但我觉得联系导师要好好斟酌，毕竟是会占导师名额。也不要同时联系多个导师，不然被发现了后果可能不会太好。 关于直博。网上说直博相较于硕士稍简单一点，有一定的道理，因为有的专业所需周期长，可能硕士期间确实做不成什么成果，老师也个更加喜欢能够跟的时间较长的学生。所以你如果十分想去梦校或是一个更好的学校的话，在考虑好是否要读博士的情况下，可以多报一报直博项目，可能性会大一点。但这并不意味着更简单，按照交大面试规则来看，对博士的面试要求是要高于硕士的。 ","date":"2022-10-25","objectID":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/:3:0","tags":["19级","保研","钱院","生物工程","上海交通大学"],"title":"19-张雅婧-生物工程-保研-上海交通大学","uri":"/19-%E5%BC%A0%E9%9B%85%E5%A9%A7-%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B-%E4%BF%9D%E7%A0%94-%E4%B8%8A%E6%B5%B7%E4%BA%A4%E9%80%9A%E5%A4%A7%E5%AD%A6/"},{"categories":[],"content":" 对于有长期价值的任务，我们无需考虑可能性，尽自己全力做到极致，做到最后一刻，合理规划，多多实践是我们的态度。对于这一类任务，不要去单单考虑可能性，因为可能性不是想出来的，是由行动构成的。 ","date":"2022-09-25","objectID":"/resource_set/:0:0","tags":[],"title":"Resource_set 10-12","uri":"/resource_set/"},{"categories":[],"content":"一. 长期核心 ","date":"2022-09-25","objectID":"/resource_set/:1:0","tags":[],"title":"Resource_set 10-12","uri":"/resource_set/"},{"categories":[],"content":"雅思： 单词：cg -\u003e 词汇胜经 阅读：cg -\u003e 剑雅4-6 写作：cg -\u003e 剑雅4-6 听力：cg（内部包含剑雅） 口语：cg ","date":"2022-09-25","objectID":"/resource_set/:1:1","tags":[],"title":"Resource_set 10-12","uri":"/resource_set/"},{"categories":[],"content":"算法： 基础课9 weeks 每周五和周日 ","date":"2022-09-25","objectID":"/resource_set/:1:2","tags":[],"title":"Resource_set 10-12","uri":"/resource_set/"},{"categories":[],"content":"二. 课内 OS 网课：王道os、南大os 实验：南大os实验 web 网课：科大web 实验：wireshark 组合数学 网课：清华马昱春 算法设计 北大屈婉玲 数图 PPT+讲义 跟上进度进行整理 ","date":"2022-09-25","objectID":"/resource_set/:2:0","tags":[],"title":"Resource_set 10-12","uri":"/resource_set/"},{"categories":[],"content":"1. 本地配置 ","date":"2022-09-13","objectID":"/blogstory/:1:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"1.1 git相关资源下载 下载git 安装相关包管理器，例如npm和yum，包管理器中含有某些博客主题需要的依赖 设置git账号：global、local ","date":"2022-09-13","objectID":"/blogstory/:1:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"1.2 hugo下载 上官方网站进行下载，详情请见hugo release，注意下载hugo-extended版，适配性更强。 下载完毕后，将文件路径/bin加入环境变量，重启电脑，打开命令行输入命令hugo version，若产生hugo版本号则证明安装完成。 ","date":"2022-09-13","objectID":"/blogstory/:1:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"1.3 博客的配置 主流的个人博客搭建引擎包括hexo和hugo，这两个文件的主要差别在于主题配置的读取上，hexo博客根目录下的config.yaml文件比theme主题内置的config.yaml文件优先级更低，如果在根目录配置下指明了主题文件信息，那么引擎就会优先渲染后者；hugo与此相反，更侧重于主题文件的更新维护，所以一般需要将主题文件的配置拷贝到根目录下。具体的差异可以参考hexo与hugo的异同。 我的博客用的是hugo-lovelt主题，主题配置参考lovelt官方文档即可，根目录主题配置记得参照主题文档examplesite下的.conf文件。 在博客的主题的选择上，我踩了很多坑，一些主题文档的维护相当不好。在选择一款喜欢的主题时，一定要关注官方文档的质量哦。 ","date":"2022-09-13","objectID":"/blogstory/:1:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2. 云服务器配置 ","date":"2022-09-13","objectID":"/blogstory/:2:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2.1 云主机购买与配置 云主机的选择：阿里云、腾讯云、华为云，这三款是主流。 关于云主机的购买，具体可参考acwing-linux相关课程： 云服务器的购买 云主机的配置： 我购买的是腾讯云的轻量级服务器，系统为linux下的ubuntu。在系统分配好云主机后，我们的初始化登录是一个叫ubuntu的账户。与一般的云服务器不同，腾讯云初始化没有root用户，但ubuntu拥有sudo权限。注意sudo权限与root权限有一定差异。具体的差异详见sudo与root。 然后我们可以进行的一些操作： 2.1.1 创建acs用户 建立： # ubuntu根目录~下 adduser acs # 创建用户acs usermod -aG sudo acs # 给用户acs分配sudo权限 查看是否成功： 注意当我们cd acs或ubuntu时会进入到它们的根目录，但这个电脑下的系统设置文件在/下，也就是说，我们需要cd /才能看到到这台主机下的所有配置文件。同时，我们之后下载的很多文件都会被保存在/etc中。 2.1.2 安装tmux和docker tmux安装教程 sudo apt-get update # linux从服务器获取软件更新情况 sudo apt-get install tmux 在安装完成后，可以通过scp将一些tmux配置文件上传至云端，启用tmux，然后在命令行进行些许配置即可完成对tmux的美化。 tmux # ctrl + b : 进入tmux命令行模式 source-file ~/.tmux.conf # 让tmux配置生效 docker安装教程 在用户（有sudo权限，比如ubuntu）根目录下，按照docker-ubuntu 安装说明中的\"Install using the repository\"进行安装即可，注意一条条cv执行命令。 ","date":"2022-09-13","objectID":"/blogstory/:2:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2.2 域名的购买与ssl证书申请 购买方面，挑选自己喜欢的域名进行购买即可。 在购买完域名后，需要经过实名验证、域名审核等流程。 之后可以申请ssl安全证书，一切按照腾讯云指引操作即可。 在申请完成后，可以对证书进行下载，会得到五个文件，我们只需要将其中的密钥对文件进行移动就行，后缀分别为.crt和.key，目标位置为/etc/nginx 为了网站长期的运行，我们需要对域名进行备案，这是国内的法律要求。 ","date":"2022-09-13","objectID":"/blogstory/:2:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2.3 nginx的下载与配置 2.3.1 nginx下载与基础配置 下载方面，可以参照ubuntu安装nginx，内容非常详细，特别注意不同文件的安装位置，由于root用户初始化一般不存在，所以在安装时应该在sudo权限用户下使用sudo apt-get install nginx进行安装。 在安装完成后，我们进行一些基础设置： # 设置开机启动nginx sudo systemctl enable nginx # 启动nginx sudo systemctl start nginx # 查看是否启动nginx sudo systemctl status nginx # 逐行执行 在浏览器搜索框输入服务器公网ip地址，如果会出现nginx的页面，说明可以导航到服务器，即nginx安装成功。为了使外部用户可以访问web服务器，需要开放防火墙，主要是80端口和443端口，可以在服务器的控制台手动设置，同时也可以命令行设置： sudo firewall-cmd --permanent --zone=public --add-service=http sudo firewall-cmd --permanent --zone=public --add-service=https sudo firewall-cmd --reload 2.3.2 nginx高级配置 仿照hugo-txcloud-nginx中的nginx.conf进行配置即可。 ","date":"2022-09-13","objectID":"/blogstory/:2:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3. 建立本地与云端的联系 ","date":"2022-09-13","objectID":"/blogstory/:3:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3.1 初步连接 使用ssh工具进行远程访问 ssh username@server_ip 交互窗口会提醒你输入密码 ","date":"2022-09-13","objectID":"/blogstory/:3:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3.2 配置免密登录 在完成过远程访问后，就可以配置免密登录。 在本地进入 ~/.ssh ssh-keygen -t rsa 生成密钥，按照指引为密钥添加文件名 密钥生成教程可访问 https://blog.csdn.net/qq_40932679/article/details/117487540 然后按照下述命令将公钥添加到远程服务器，最终会被添加在.ssh中的authorized_key文件内 ssh-agent bash # 启动ssh高速缓存 ssh-add -i ~/.ssh/txcloud.pub username@server_ip # 将公钥添加到目标用户端下 关于ssh-agent可以参考 https://blog.csdn.net/weixin_43972437/article/details/114578337 接着，在.ssh/查看有无config文件，若没有就新建一个 打开config文件，按照如下格式进行配置 # 腾讯云 Host server1 HostName 43.143.88.173 User acs IdentityFile ~/.ssh/txcloud Host server0 HostName 43.143.88.173 User ubuntu IdentityFile ~/.ssh/txcloud 这样我们的免密登录就配置好了，注意到，对不同用户要进行分别配置，但它们所使用的公密钥可以相同。 ","date":"2022-09-13","objectID":"/blogstory/:3:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3.3 使用winscp与云端进行图形化文件交互 winscp下载 如果连接用户并非root用户，参考winscp修复远程连接进行修改 ","date":"2022-09-13","objectID":"/blogstory/:3:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4. 建立本地与github的联系 ","date":"2022-09-13","objectID":"/blogstory/:4:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4.1 git账号管理 使用邮箱注册github账号，并登录 在本地使用命令ssh-keygen -t rsa -C \"username@server_ip\"生成注释 为“username@server_ip”的密钥对，在生成的过程中可以为密钥对命名。然后将公钥.pub文件的内容进行复制，在github用户setting下的SSH and GPG keys模块新建ssh key，key name任意取，将公钥内容添加到下方加密区，完成添加。 回到本地， 如果git存在多账号，那么需要按如下方式进行管理，打开config文件: # github user Host X Hostname github.com User BreezEcho PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_x # github user Host Y Hostname github.com User huansong-dev PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_y 关于git多账号配置详情请见 https://www.cnblogs.com/wanan-happy/p/14588504.html 然后将私钥加入ssh-agent进行管理：ssh-add id_rsa_x 、ssh-add id_rsa_y 在配置完成后，可以使用ssh -T git@X来检验是否完成了连接 为了使用便利，我们可以将常用的账号设置为全局账号 git config --global user.name username git config --global user.email useremail 如果在某个仓库需要使用特殊账号，可以进行如下操作 cd base # 进入该仓库 git config --local user.name username git config --local user.email useremail ","date":"2022-09-13","objectID":"/blogstory/:4:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4.2 建立本地仓库与远程仓库的联系 远程新建名为为user_id.src的私人仓库，用于管理博客项目 本地新建仓库hblog，如果是hugo site，执行hugo new site hblog 在设置好仓库账号后，进入hblog，并按照如下操作进行关联 git init # 初始化为git本地仓库 git remote -v # 查看关联情况 git remote add origin git@X:username/username.github.io.git # 建立联系 ","date":"2022-09-13","objectID":"/blogstory/:4:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4.3 博客项目文件推送 # 进入博客根目录 touch .nojekyll # 默认不使用github pages自带的jekyll主题，空文件 git add . # 为所有文件添加追踪，之后的一切变化都可以通过git status进行查看 git commit -m \"ud\" # 将追踪文件的变化上传到本地仓库 git push -u origin master # 首次推送信息，之后可以将-u省去 之后如果远程仓库有变化，需要先git pull origin master，可能会出现git merge提醒，这个时候允许合并，然后再执行上述步骤。 ","date":"2022-09-13","objectID":"/blogstory/:4:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"5. 使用github actions将博客展示文件部署到github pages与云端服务器 主要参考： hugo双端部署，给我最大灵感的文章。 hugo+github action 少数派 ","date":"2022-09-13","objectID":"/blogstory/:5:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"5.1 github actions + public -\u003e github pages 5.1.1 赋予项目仓库访问本账号下其它仓库的特权 新建名为user_id.github.io的公共仓库，注意user_id为你的用户名，这样的名称格式相对固定。这个仓库用来展示我们的博客内容。 进入github用户界面的setting下: 选择右上角新建个人密钥，选中repo和workflow，然后点击生成。注意密钥只会出现一次，记得复制。将这里得到的密钥添加到我们项目仓库的actions secrets，并命名为PERSONAL_TOKEN 5.1.2 建立github actions工作流 首先，我们将项目仓库的默认分支改为master(setting中)，然后进入项目actions模块，新建工作流文件gh-pages.yml，配置参考如下，可按需求进行修改： name: deploy on: push: workflow_dispatch: schedule: # Runs everyday at 8:00 AM - cron: \"0 0 * * *\" jobs: build: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \"latest\" - name: Build Web run: hugo - name: Deploy Web uses: peaceiris/actions-gh-pages@v3 with: PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }} EXTERNAL_REPOSITORY: pseudoyu/pseudoyu.github.io PUBLISH_BRANCH: master PUBLISH_DIR: ./public commit_message: ${{ github.event.head_commit.message }} 然后等待一段时间，就可以看到工作流正常，进入博客展示仓库，可以发现多了一个master分支。 一段时间后，访问站点user_id.github.io就可以看到博客内容啦。 ","date":"2022-09-13","objectID":"/blogstory/:5:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"5.2 github actions + public -\u003e txcloud 5.2.1 给予项目仓库访问云服务器的特权 与本地密钥访问云服务器类似，我们需要先得到一个密钥对，然后分别将公钥和密钥置入服务端与用户端。 在本地ssh-keygen -t rsa 创建密钥对，参考上述步骤将公钥放入云端用户的authorized_key中，将私钥放入项目仓库的actions secrets内。 这个操作告诉我们密钥在哪里产生不重要，重要的是公钥与私钥的位置，就像锁与匙。 5.2.2 维护文件权限 在云主机相应用户目录下新建public空文件夹，通过ls -al命令我们发现文件的所有人以及组内用户都是合理的。如果之前public文件位置与此不符，就需要对nginx配置文件进行调整。 5.2.3 更新项目仓库actions文件 在gh-pages.yml文件中添加以下模块，并根据实际情况做一些修改，注意yaml文件的格式。 - name: Deploy Tencent Cloud uses: wlixcc/SFTP-Deploy-Action@v1.2.4 with: username: 'root' #ssh user name server: '${{ secrets.SERVER_IP }}' #引用之前创建好的secret ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} #引用之前创建好的secret local_path: './public' # 对应我们项目public的文件夹路径，注意不能访问内部文件，因为此处没有令牌 remote_path: '/home/username/' # 对应云上的目录 等待片刻，观察工作流正常，进入云主机对应文件夹，发现文件已更新，同时权限正确。至此，github actions云部署完成。 ","date":"2022-09-13","objectID":"/blogstory/:5:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"6. 结语 这次经历让我意识到，弯路，也是成长的一部分；同时，在项目中的学习效率是非常高的，当然还需要不断更新信息搜集算法。这篇文章会在后面慢慢丰富，形成一篇合格的教程。 ","date":"2022-09-13","objectID":"/blogstory/:6:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"你好，这是一个测试文档","date":"2022-09-10","objectID":"/%E6%B5%8B%E8%AF%95/","tags":[],"title":"测试","uri":"/%E6%B5%8B%E8%AF%95/"},{"categories":[],"content":" 文章的部分内容被密码保护： --- DON'T MODIFY THIS LINE --- ## 包、变量和函数 待填 ## 流程控制语句（for、if、else、switch和defer） 待填 ## 实用的类型 ### 切片 + 相关特性 1. 切片的长度len：切片内包含元素的数量 2. 切片的容量cap：受切片起点影响，由当前对数组引用形成的切片起点，到原数组末的元素数量 3. 当切片的长度与容量皆为0，则切片又被命名为nil（零值） + 特点 1. 切片是基于数组但又更灵活的 2. 通过append(s, elem)能够将若干元素加入切片 ### Range遍历 - 可以用Range来遍历数组 - Range在遍历各元素时，会返回当前元素的下标和数值，因此在循环遍历中需要用两个变量来承接，如果不需要某个方面如下标，可以用_填充该方面，一般会先返回下标，再返回数值。若只要索引，可以忽略掉第二个变量 ### 映射 + 相关描述 1. 映射将键连接到值 2. 映射的零值是nil，nil既没有键，也没有值 3. make函数会返回给定类型的映射，并将其初始化，通常用make来无参初始化一个映射 ```go m = make(map[int]Vertex) … m[“hello”] = 8 // 对映射进行设置 映射的文法 var m = map[string]Vertex{ \"Bell Labs\": Vertex{ 40.68433, -74.39967, }, \"Google\": Vertex{ 37.42202, -122.08408, }, } 若顶级类型为一个系统类型名，则可以省略，例如上述的{}中的Vertex 对映射的高级处理（在上述基础上） m[“a”] = 1 m[“a”] = 2 // 修改映射 elem = m[“a”] // 获取键对应的值 v, ok = m[“a”] // 查询键a是否在映射中, 若不在映射，则将v作为键“a“的零值 ","date":"2022-09-10","objectID":"/%E6%B5%8B%E8%AF%95/:0:0","tags":[],"title":"测试","uri":"/%E6%B5%8B%E8%AF%95/"},{"categories":[],"content":"函数 函数不仅可以做参数，还可以做函数的返回值 package main import ( \"fmt\" \"math\" ) func compute(fn func(float64, float64) float64) float64 { return fn(3, 4) } // 函数可以做参数 func main() { hypot := func(x, y float64) float64 { return math.Sqrt(x*x + y*y) // 函数可以做返回值 } fmt.Println(hypot(5, 12)) fmt.Println(compute(hypot)) fmt.Println(compute(math.Pow)) } ","date":"2022-09-10","objectID":"/%E6%B5%8B%E8%AF%95/:0:1","tags":[],"title":"测试","uri":"/%E6%B5%8B%E8%AF%95/"},{"categories":[],"content":"函数的闭包 Go 函数可以是一个闭包。闭包是一个函数值，它引用了其函数体之外的变量。该函数可以访问并赋予其引用的变量的值，换句话说，该函数被这些变量“绑定”在一起。 也就是说Go函数可以实现自给自足，它的参数由内部参数决定，这样的结构使得其能够简化为名义上的函数值 代码体现： package main import \"fmt\" func adder() func(int) int { sum := 0 return func(x int) int { sum += x return sum } } func main() { pos, neg := adder(), adder() for i := 0; i \u003c 10; i++ { fmt.Println( pos(i), neg(-2*i), ) } } 例如，函数 adder 返回一个闭包。每个闭包都被绑定在其各自的 sum 变量上。 一个闭包的简单示例 // 利用函数的闭包实现斐波那契数列 package main import \"fmt\" // 返回一个“返回int的函数”（注意返回值的书写方法 func fibonacci() func() int { sum := 1 m := -1 return func() int{ k := sum sum += m m = k return sum } } func main() { f := fibonacci() for i := 0; i \u003c 10; i++ { fmt.Println(f()) } } ","date":"2022-09-10","objectID":"/%E6%B5%8B%E8%AF%95/:0:2","tags":[],"title":"测试","uri":"/%E6%B5%8B%E8%AF%95/"},{"categories":[],"content":"方法和接口 ","date":"2022-09-10","objectID":"/%E6%B5%8B%E8%AF%95/:1:0","tags":[],"title":"测试","uri":"/%E6%B5%8B%E8%AF%95/"},{"categories":[],"content":"方法 1. 用结构体作为方法接收者 Go没有类，但可以为结构体赋予方法，结构体对象可以做方法接收者 type Vertex struct { X, Y float64 } func (v Vertex) Abs() float64 { return math.Sqrt(v.X*v.X + v.Y*v.Y) } 这样的话就可以调用v.Abs()处理v内部数据 方法只是带接受者参数的函数，但是方法一般不称为函数，如果令v作为Abs的形式参数，那么依然有Abs(v)，存在同样的效果。同时，也可以为非结构体类型声明方法，比如为基本数据类型取别名，然后为别名类型赋予方法。 但是，要注意接收者的类型定义和方法声明必须在同一包内，不能为内建类型声明方法。 2.用结构体指针作为方法接收者 作为方法的函数可以对接收者内的元素进行直接的操作，若要使得操作生效，就需要将一般方法接收者升级为指向改接受者的指针，否则函数修改的只是接收者的副本，并不会对原结构体类型生效。 func (*v Vertex) Scale(f float64) { v.X = v.X * f v.Y = v.Y * f } 3.指针重定向 通常带指针参数的函数只能接收指针类型实参，值传递型函数只接受值传入。但方法不同，如果接受者为指针类型，那么在调用方法时接收者可以为值也可以为指针类型，因为系统会将值解释为指针类型，即实现定向。 var v Vertex v.Scale(5) // OK p := \u0026v p.Scale(10) // OK 同样的事情也发生在相反的方向，当方法的接受者为值类型，那么在调用方法时如果接收者为指针，系统会将其转化为值类型 var v Vertex fmt.Println(v.Abs()) // OK p := \u0026v fmt.Println(p.Abs()) // OK 4.选择值或指针做接收者 使用指针接收者的原因有二： 首先，方法能够修改其接收者指向的值。 其次，这样可以避免在每次调用方法时复制该值。若值的类型为大型结构体时，这样做会更加高效。 通常来说，所有给定类型的方法都应该有值或指针接收者，但并不应该二者混用 ","date":"2022-09-10","objectID":"/%E6%B5%8B%E8%AF%95/:1:1","tags":[],"title":"测试","uri":"/%E6%B5%8B%E8%AF%95/"},{"categories":[],"content":"接口 1.相关描述 接口是一种数据类型，是由一组方法签名定义的集合 接口类型的变量可以保存任何实现了这些方法的值 外界参量需与接口内部方法的接受者类型保持一致才能够让接口保存参量 代码片段如下： func (v *Vertex) Abs() float64 { return math.Sqrt(v.X*v.X + v.Y*v.Y) } type Abser interface { Abs() float64 } func main() { var a Abser f := MyFloat(-math.Sqrt2) v := Vertex{3, 4} a = f // a MyFloat 实现了 Abser a = \u0026v // a *Vertex 实现了 Abser // 下面一行，v 是一个 Vertex（而不是 *Vertex） // 所以没有实现 Abser。 a = v fmt.Println(a.Abs()) } 2.接口与隐式实现 类型通过实现一个接口的所有方法来实现该接口。既然无需专门显式声明，也就没有“implements”关键字。 隐式接口从接口的实现中解耦了定义，这样接口的实现可以出现在任何包中，无需提前准备。 因此，也就无需在每一个实现上增加新的接口名称，这样同时也鼓励了明确的接口定义。 这个刚开始会有点难理解，不过可以通过代码来简化我们的理解： type I interface { M() N() } type T struct { S string } // 此方法表示类型 T 实现了接口 I，但我们无需显式声明此事。 func (t T) M() { fmt.Println(t.S) } func (t T) N() { fmt.Println(t.S, \"World\") } func main() { var i I = T{\"hello\"} i.M() i.N() } 如果实际接收者与接口内方法接收者类型相同，那么该数据类型表示便可以用接口名替换，该接收者也可以调用接口内对应方法。 ","date":"2022-09-10","objectID":"/%E6%B5%8B%E8%AF%95/:1:2","tags":[],"title":"测试","uri":"/%E6%B5%8B%E8%AF%95/"},{"categories":null,"content":"系统层面 system mapthink tenet prejudice mechanism 辅助认知 knowyourself ","date":"2020-03-07","objectID":"/monarch/:0:0","tags":null,"title":"monarch","uri":"/monarch/"},{"categories":null,"content":"About LoveIt","date":"2019-08-02","objectID":"/about/","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"  LoveIt is a clean, elegant but advanced blog theme for Hugo developed by  Dillon. It is based on the original LeaveIt Theme and KeepIt Theme. Hugo Theme LoveIt ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Features ","date":"2019-08-02","objectID":"/about/:1:0","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Performance and SEO  Optimized for performance: 99/100 on mobile and 100/100 on desktop in Google PageSpeed Insights  Optimized SEO performance with a correct SEO SCHEMA based on JSON-LD  Google Analytics supported  Fathom Analytics supported  Plausible Analytics supported  Yandex Metrica supported  Search engine verification supported (Google, Bind, Yandex and Baidu)  CDN for third-party libraries supported  Automatically converted images with Lazy Load by lazysizes ","date":"2019-08-02","objectID":"/about/:1:1","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Appearance and Layout  Desktop/Mobile responsive layout  Light/Dark mode  Globally consistent design language  Pagination supported  Easy-to-use and self-expanding table of contents  Multilanguage supported and i18n ready  Beautiful CSS animation ","date":"2019-08-02","objectID":"/about/:1:2","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Social and Comment Systems  Gravatar supported by Gravatar  Local Avatar supported  Up to 73 social links supported  Up to 24 share sites supported  Disqus comment system supported by Disqus  Gitalk comment system supported by Gitalk  Valine comment system supported by Valine  Facebook comments system supported by Facebook  Telegram comments system supported by Comments  Commento comment system supported by Commento  utterances comment system supported by utterances  giscus comment system supported by giscus ","date":"2019-08-02","objectID":"/about/:1:3","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Extended Features  Search supported by Lunr.js or algolia  Twemoji supported  Automatically highlighting code  Copy code to clipboard with one click  Images gallery supported by lightGallery  Extended Markdown syntax for Font Awesome icons  Extended Markdown syntax for ruby annotation  Extended Markdown syntax for fraction  Mathematical formula supported by $\\KaTeX$  Diagrams shortcode supported by mermaid  Interactive data visualization shortcode supported by ECharts  Mapbox shortcode supported by Mapbox GL JS  Music player shortcode supported by APlayer and MetingJS  Bilibili player shortcode  Kinds of admonitions shortcode  Custom style shortcode  Custom script shortcode  Animated typing supported by TypeIt  Cookie consent banner supported by cookieconsent  Person shortcode … ","date":"2019-08-02","objectID":"/about/:1:4","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"License LoveIt is licensed under the MIT license. Check the LICENSE file for details. ","date":"2019-08-02","objectID":"/about/:2:0","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Special Thanks Thanks to the authors of following resources included in the theme: normalize.css Font Awesome Simple Icons Animate.css autocomplete Lunr.js algoliasearch lazysizes object-fit-images Twemoji emoji-data lightGallery clipboard.js Sharer.js TypeIt $\\KaTeX$ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine cookieconsent ","date":"2019-08-02","objectID":"/about/:3:0","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":" 2022招生专业目录 目标410-436，必须越过390 ","date":"0001-01-01","objectID":"/fdu/:0:0","tags":null,"title":"","uri":"/fdu/"},{"categories":null,"content":"1. 数学二 看书刷题为主，视频为辅 看书之中，以复习全书为主，教材为辅，因为考研有一定目的性 具体参考：[小白偷跑全规划](高分预警：23考研数学复习规划，1.5万字讲透考研数学复习计划 - 鹿十七的文章 - 知乎 https://zhuanlan.zhihu.com/p/447047513) ","date":"0001-01-01","objectID":"/fdu/:1:0","tags":null,"title":"","uri":"/fdu/"},{"categories":null,"content":"1.1 基础阶段 资源： 通用：李王全书 高数 张宇基础30讲、强化36讲 线代 张宇基础30讲、强化9讲 刷题：汤1800(有空做） 时间 方式 看书理解为主，做题为辅 ","date":"0001-01-01","objectID":"/fdu/:1:1","tags":null,"title":"","uri":"/fdu/"},{"categories":null,"content":"1.2 强化阶段 资源： 通用：李王全书 高数：张宇强化18讲 线代：李永乐线代辅导讲义 刷题：李永乐660+李880+张宇1000（拔高） 时间 方式 ","date":"0001-01-01","objectID":"/fdu/:1:2","tags":null,"title":"","uri":"/fdu/"},{"categories":null,"content":"1.3 真题阶段 资源：李永乐《历年真题详解》为主 时间 方式 ","date":"0001-01-01","objectID":"/fdu/:1:3","tags":null,"title":"","uri":"/fdu/"},{"categories":null,"content":"1.4 冲刺阶段 资源：林的六套卷（较易）、张宇的八套卷（较难）和汤家凤的八套卷（较易）（有啥买啥，不断做） 时间 方式 [408](计算机 408 要怎样复习才可以上 120？ - 婪瘾青年的回答 - 知乎 https://www.zhihu.com/question/379215729/answer/1816003835) [fdu学长](2021考研一战上岸复旦大学计算机专业经验贴 - 仰望星空的文章 - 知乎 https://zhuanlan.zhihu.com/p/363813723) [英语](废话很多的考研英语一92分经验贴，速来！ - 南禾的文章 - 知乎 https://zhuanlan.zhihu.com/p/108325861) 这几天将时间安排进行一个初步的完善，对方法进行整理然后进行实践，在实践中进行调整 适应与韧性第一 ","date":"0001-01-01","objectID":"/fdu/:1:4","tags":null,"title":"","uri":"/fdu/"},{"categories":null,"content":"大内核 我所拥有的东西：智慧、资本 我想到达的地方：目标、理想 我所热爱的一切：旅行、摄影、acg… 路途上的伙伴们：家人、朋友、圈子与人脉 这四个问题就是我们的归宿或者说根基 而我之前一直在注重于单单一个方面，所以经常迷失方向 那些能支持你走下去的东西 那些支持你每天早起的东西 那些冲破困境的力量 ——光荣进化的使命感，目标的感召 ","date":"0001-01-01","objectID":"/%E5%A4%A7%E5%86%85%E6%A0%B8/:0:0","tags":null,"title":"","uri":"/%E5%A4%A7%E5%86%85%E6%A0%B8/"}]