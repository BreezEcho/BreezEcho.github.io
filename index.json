[{"categories":["保研"],"content":"简介 时光飞逝，距离上大毕业已经过去许久，如今硕士生涯也即将进入尾声，16级也已经成为了历史。我是16级计科专业的本科毕业生，若无意外可能也是近年来计院成功推免并就读Top2高校的第一人。本篇文章针对我的保研经历仅基于回忆，具体的信息还需要依据学长学姐的最新分享为准。但除了保研以外，本文也会记录自己的一些代码外的思考以及就业方面的建议。希望对大家有用~ ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:1:0","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["保研"],"content":"基本情况 专业：上海大学计算机学院，计算机科学与技术，16级，主要方向：计算机视觉、深度学习 GPA：3.84 (推免时3.82)，成绩排名：2/273 (前期夏令营时4/273) 荣誉：国家奖学金，上海市奖学金，学业特等奖学金(连续三年)，创新创业奖学金(连续两年) 科研：中文核心水文*2，发明专利*1，软件著作权*1，国家级创新项目负责人，上海市创新项目负责人，项目若干 竞赛：美赛M奖，其余水奖近10项 六级：560+ 最终去向：清华大学软件学院 ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:2:0","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["保研"],"content":"夏令营情况 获得入营资格：复旦大学计算机学院、中科大计算机学院、华中科技大学计算机学院、南京大学软件学院、同济大学电信学院、同济大学软件学院、上科大信息学院、华师大软件学院、华师大计算机系 参加的夏令营：复旦大学计算机学院 (未通过)、中科大计算机学院 (offer)、华中科技大学计算机学院 (offer)、同济大学电信学院 (offer) 采取海投策略，把一线城市的985高校几乎投了个遍，当年上大简历依然无法通过相当数量头部高校的初筛(尤其记得北理北航和所有中科院所皆没拿到资格)。由于时间冲突，后来仅参加了4所高校的夏令营，除复旦外都拿到了offer。 具体而言，复旦计算机学院的OJ考核对非ACM选手很不友好，也是没有通过的主要原因；中科大和华中科技大学计算机学院的机试都不难，面试正常表现即可；同济大学电信学院当时面试有英文自我介绍。由于当年都是线下的夏令营形式，因此比较重要的一点就是在夏令营期间联系导师并与导师见面。 ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:3:0","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["保研"],"content":"预推免情况 获得预推免资格：清华大学软件学院、复旦大学计算机学院、浙江大学软件学院、东南大学计算机学院 参加的预推免：清华大学软件学院 (offer)、复旦大学计算机学院 (offer) 预推免期间，我基本只考虑优于中科大的学校进行投递，北大、上交依然没能拿到资格。清华能够给我机会确实是先前没有想到的，因为上一届学长学姐的最优去向也仅是浙大和复旦，也因此对于清华的机会也特别珍惜，当时机试面试前一天晚上在旅馆，也暗暗下了决心“这可能是你这辈子离Top2高校最近的机会，请好好把握！”。清华软院的考核也是机试+面试，机试稍有难度(当时是3道题，ak了前两题，第3题来不及做且看不到分数)，面试的老师也有一定的水平，问得比较深，基础知识记得有被问“集成学习中bagging和boosting的区别是什么？”和“决策树的训练过程是怎样的？”。庆幸的是，我顺利通过了清华软院的考核，也成为了名单上仅个位数的来自211学校的入选者。当然，清华软院基本上外校给的都是专硕，并且在9-10月推免期间一直未能明确每个导师的名额数量，也因此在找导师方面遇到了比较大的困难。除了清华以外，我还参加了复旦计院的第二次考核，但依然由于自身没有ACM经历，最后仅拿到了专硕，最后遂放弃。 ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:4:0","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["保研"],"content":"如何准备保研 保研一定是个持久战，从大一开始就需要开始卷。不过，简单来说，保研的考核对象也就是：GPA+科研\u0026项目+竞赛+代码能力+基础知识，具体如下： GPA：没什么好说的，排名越靠前越容易通过顶尖高校的初筛，既然想保研那就是硬卷 科研\u0026项目：可以进入导师的实验室做一些真正意义上的科研或者项目，有顶会顶刊论文或者在投肯定是极大的加分项，以及要好好准备如何润色自己的项目(简单来说就是面试时如何吹，这一点甚至比实际做的内容更加重要) 竞赛：ACM类竞赛含金量最大，对未来就业而言也有极大价值；其次可以参加些数学建模(国赛+美赛)和创新创业比赛，如果是AI方向还可以参加Kaggle、天池等公认的刷榜比赛 代码能力：ACM选手无需准备，非ACM选手需要刷题，如果没有算法竞赛基础，建议过一遍《王道论坛计算机考研机试指南》，刷题方面可以使用各高校OJ平台、浙大PAT等，这些平台的题目类型与保研机考类似，LeetCode反而针对找工作但与保研机试有差异 基础知识：主要是自己方向和项目涉及到的基础知识，可以在网上找对应方向的八股文，这一点和找工作也是一致的 虽然作为上大的学生，但是完全可以以清北高校标准要求自己，清北的很多同学只要在本科期间没有你努力那就很大概率会落后于你。如果你能长期保持高强度的本科生活，3-4年的时间足够让你比肩清北本科生的平均水平，特别是在重视技术的计算机类专业。 至于从哪些方面切入，如果决定保研，那就按照上面列出的逐条准备，特别是GPA是一个长期的事宜，贯穿了整个本科四年，应当给予最大的重视程度。就我个人而言，以下列出我大一至大三期间的一些经历和成果，仅供参考，也希望未来的学弟学妹们能够超过我~ ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:5:0","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["保研"],"content":"大一：学习+兴趣 大一全年GPA：3.69，针对保研而言不够高 养成了自习的习惯，不上课的时候就在图书馆/自习室 坚持每天背单词(充分利用背单词App)，大幅提升词汇量 尝试阅读英文原版书籍，针对个人兴趣选择读物 一时兴起尝试考插班生（以失败告终） 暑假期间参加新加坡国立大学的访学项目 由于当年还无计算机直招，因此在理工大类以综合排名前5%分流进计算机学院 侥幸获得学业特等奖学金 ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:5:1","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["保研"],"content":"大二：学习+竞赛 大二全年GPA：3.83 入门数学建模，参加竞赛 (个人经历证明，ACM相较于数学建模更具优势) 确定了未来保研的目标，每门专业课争取4.0 作为负责人申请了创新项目，校级立项 进入了导师的CV实验室，开始学习机器学习、深度学习、计算机视觉相关知识，阅读论文 作为负责人申请暑期社会实践活动，获得校级A类品牌提升类立项 暑假期间参加山东大学“可视计算”夏令营，完成一个可列进简历的点云项目 暑假期间开始刷志愿者经历 (针对计院保研加分政策) ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:5:2","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["保研"],"content":"大三：学习+科研 大三全年GPA：3.95 全身心准备保研，继续参加竞赛，立志于全科4.0 开始准备机试，持续刷题练习 被导师安排科研项目，在研究生学长的研究基础下继续深入，后作为负责人申请了创新项目，并获得国家级立项 一作完成两篇机器学习方向的论文，投稿中文核心期刊 5-7月期间，申请各学校的夏令营和预推免（海投） 暑假参加夏令营和预推免，获得5所985高校offer ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:5:3","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["保研"],"content":"方向与导师选择 关于方向，如果跟我一样主要研究AI算法，那么硕士学历是必须的(博士学历其实更加吃香)，保研也比考研有明显的优势。而如果是开发方向，未必需要读研，因为硕士期间也涉及不到过多科研，建议根据计算机行业和互联网行情自主决策，选择远远大于努力，不排除学历贬值的速度大于就业市场环境的变化速度。 显然，AI方向包括CV、NLP、推荐系统、数据挖掘、以及冷门的联邦学习、深度学习编译器等。在方向这个问题上，最重要的是自己的兴趣，其次是和先前科研/项目的匹配度，第三点是宏观市场的需求供应量预测。当然，第三点也是最困难的，若干年前CV在互联网几乎找不到落地场景，也因此CV算法的同学大批量转推荐系统；但近两年开始推荐系统在互联网的应用也达到了阶段性的瓶颈，反而CV因为自动驾驶行业的崛起而更受青睐。 行业在变化，需求在变化，唯一不变的就是变化本身，也因此当下最为火热的技术并不代表未来就是好的。作为22年的硕士应届生也明显体会到AI算法相较于开发在就业形势上的巨大劣势，特别是互联网的降本增效也越来越多地在无法带来效益的算法团队上缩招甚至裁员。哪怕同属AI算法领域，冷门的深度学习编译器反而竞争更小，在22年这个节点上也更容易找到高薪工作。也因此，坦白而言，我其实后悔了当时坚持在AI赛道特别是CV方向，而没有具备足够的开发或者其他行业的相关能力。 在导师选择上，由于我本科期间主要围绕计算机视觉、深度学习、机器学习方向展开相关的学习和项目，也因此主要也是联系AI方向(特别是计算机视觉)的导师。这里希望大家重视导师选择的问题，导师决定了未来硕士若干年的成果和幸福问题，要么实验室具有强劲的论文发表基础可以帮助自己科研，要么导师比较佛系可以有大量的自由时间或允许实习。 ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:6:0","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["保研"],"content":"后保研\u0026研究生生涯 保研后的这段时间是比较清闲的，一方面可以放松放松，做做自己感兴趣的事情，体验下真正的大学生活；另一方面，这也是段非常适合实习的好时期，去工业界体验下真正的工程研发也能够为今后的简历上填上一笔。 保研只是决定了你去哪个学校，这只是开始，并不是结束。哪怕你是清北的学生，照样会被其他985和211的顶尖同学超过。也因此，如何过好研究生生涯让自己若干年后依然具备竞争力也是需要考虑的。从研究生的第一天起，我的导师就对我说“你作为一个清华的学生，就应当能够一个人完成3个人的事情！”。也确实，在之后的研一研二，我经历了学生生涯最为忙碌和高压的两年，课业、科研和项目的并行成为了常态，但这也为我的简历上增添了不少科研和项目经历。 如果你也是AI方向，那研究生期间最能带来竞争力的就是顶会顶刊的论文，但这个过程可能充满挑战和挫败，特别是以CCF-A类作为目标，可能在若干次的被拒和大修中逐渐丧失了热情。但这个时候还请坚持下来，科研就是这样枯燥乏味，只要不断地对目前的工作进行改进和优化，被录用其实也只是时间问题。 另外一点，除了专注于自己方向的研究以外，也请时刻关注行业的发展和现状，你的研究对应于哪些公司和哪些岗位？这些岗位是否能真正地为企业创造价值？除了直接对口的去向以外，是否还有其他行业或公司？如果你的主要研究方向在工业界的需求或行情不够理想，那就需要考虑是否有其他自己能转的相似方向，技多不压身，多学些东西(哪怕是计算机专业以外的)都是有益的。 ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:7:0","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["保研"],"content":"就业相关 绝大多数同学研究生毕业后也是以就业作为去向。在22年的节点上，计算机类专业的就业去向大致分为以下几类： 国内互联网：无论算法类还是开发类，显然互联网是最多的去向，岗位也很全面，薪资往往也比国企央企外企等高不少，但这是一个很受宏观经济影响的行业，今年以来互联网行情急转直下，明后年如何还需持续观察 互联网外企：Google、Microsoft、Apple、Amazon、Intel、PayPal等在国内的研发团队，难度较大，一般性会卡学历，薪资大概率会比国内互联网低，岗位也会少很多，仅个别有AI算法类岗位，开发岗位不少。外企最大的优势在于WLB(Work Life Balance)，工作强度比国内互联网小很多，几乎不用加班 国企央企： 银行类：国有商业银行(工农建中等等)的总部、软件研发中心、分行，一般性开发类岗位较多，个别存在算法类岗位(有些在银行的子公司)，薪资比互联网低不少，但重在稳定 券商类：各证券公司，招人不多，薪资比银行高，基本都有开发类，个别有算法或者量化类岗位，但一般性都要求实习转正的形式，很难直接通过秋招春招录用 华为/中兴：实则不是国企，只是国资，相较于互联网更为稳定，华为近年来薪资开得并不比互联网低 国家电网：如果能进是很香的，基本上需要参加国家电网的校招会或者考试，专业要求不高，是可以求稳待一辈子的地方 运营商：电信、移动、联通，同样开发类岗位较多，算法类岗位可能只在子公司存在 中国航天/中国电科/中国电子/中国船舶：传统国企，开发类岗位基本都有，算法类未必有 独角兽-人工智能：以商汤、旷视、依图为代表，AI研究能力基本上都很强，但是落地和工程能力差，目前依然处于亏损状态，算法类同学可以考虑，开发类岗位技术含金量不高 独角兽-新能源/自动驾驶：随着新能源汽车行业而崛起，以蔚来、小鹏汽车、理想汽车为代表，也包括很多其他创业公司，目前属于快速扩招和发展期，算法类围绕自动驾驶相关算法，开发类岗位也有。除此之外，可以特别关注比亚迪，目前销量业绩已经可以与特斯拉竞争，也在大扩招 独角兽-芯片行业：芯片行业当前也处于风口，包括地平线、寒武纪、哲库、复旦微电子、比特大陆等，算法类岗位基本偏向于底层C++，开发类岗位也有一些 选调\u0026公务员：体制内铁饭碗，不管经济如何都不受影响，如果能够走选调或者考上公务员那也是特别香的，比较看重学历和学生工作，未来基本不再与代码打交道 针对找工作，那就应当以公司的考核方向进行努力，在就业方面其评价指标肯定和保研是有差异的。技术类的考核指标基本是：学校/学历+实习经历+项目经历+竞赛获奖+代码能力+八股文，具体而言： 学校/学历：针对互联网公司而言仅仅是简历初筛的门槛，只决定是否有资格笔试面试，基本与是否被录用无关，但在一些国企外企而言学校/学历会起到更大的作用(比如华为中兴、银行等会关心学校和学业成绩)。 实习经历：特别重要！应该来说是这些考核指标中最为重要的，有大厂实习经历的优势极大，无论是否最终去互联网行业，因此强烈鼓励大家在本科研究生期间有机会多去实习！ 项目经历：如果是算法岗那就是科研项目的深度，是否有足够的创新性；如果是开发岗那就是项目的复杂程度和应用价值，如参与开源项目建设会是一大亮点。同样，要想好如何包装自己的项目，以在面试时表现出色 竞赛获奖：一般性比较认可ACM类竞赛奖项，其它数学建模、创新创业等认可度不高 代码能力：主要在笔试和面试被考查，题型与保研机考不太一致，需要多刷LeetCode，也因此建议大家尽早开始刷题 八股文：相关专业的基础知识，面试时候或多或少都会被问，算法岗就是AI模型相关(SVM、决策树、梯度、过拟合等)的基础问题，开发岗就是OS+计网+数据结构等基础，网上有不少整理后的材料可以进行复习 针对就业和职业发展而言，同样是选择\u003e努力，行业和需求同时在变化，就业难易度不仅取决于宏观的经济环境，还取决于自己赛道的供需关系。若干年前，没人能够想到互联网行情会在22年大幅恶化，也没有人想到芯片行业能够快速崛起。如果你看到了这样的机会，只要有时间，那就去勇敢拥抱吧。风口上猪都能上天，但风口也会有过去的那一天，毕竟长者都说过 一个人的命运啊，当然要靠自我奋斗，但是也要考虑到历史的进程。 ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:8:0","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["保研"],"content":"后言 上大的校训是“自强不息，先忧后乐”，清华的校训是“自强不息，厚德载物”，其中共同的“自强不息”曾经激励了我们，希望也能激励你们。如果你不甘平庸、希望大有所为，那现在正是最好的奋斗时期。加油！上大人！ ","date":"2022-10-30","objectID":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/:9:0","tags":["保研","CS","计院","计算机科学与技术","清华大学","AI","计算机视觉","就业"],"title":"16级学长的保研历程：从上大到清华","uri":"/16-%E5%8D%A2%E5%98%89%E8%BD%A9-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF-%E4%BF%9D%E7%A0%94-%E6%B8%85%E5%8D%8E/"},{"categories":["essay"],"content":"对于我来说，生活的盼头，就是在获得立身之本的智慧的同时，去追寻自己所热爱的东西，不断发掘这个世界的多元性并与之建立联系。 比如我喜欢新西兰民谣、风光摄影和cg作品，在课业之余我就会给自己一段时间去享受，长短不重要，重要的是那种纯粹的、无目的性的感觉。 某些机缘巧合下我发现花花的歌、人像摄影、还有国风水墨画也挺不错，那么我就会觉得：欸，这些领域我也可以挖掘一下。 我认为这个就是追寻热爱、发掘多元性的过程，它带给我纯粹的快乐。 我们可以有这样的想法，但常常会迷失，包括我自己。 而迷失的诱因主要有两点：成长环境、心理环境。 这两点如果讲深了感觉可以写篇专业论文哈哈，不过经历过的应该懂的都懂，我就直接给出我的处理方式。 而对一个人成长环境影响最大的就是家庭，人生不像是打游戏，不会从”请选择你的英雄“开始。我们不能保证我们的家庭质量，但是我们可以选择自己的活法，将人生的控制权掌控在自己的手里。最差的情况，如果感觉周围没有人能理解你，例如父母的不支持抑或是伤害、朋友的不理解。那就不妨孤身一人，过滤掉外界的噪声。当然这里不是建议大家一直寡着，而是需要有一种把自己交给自己的能力，如果有一对能无时无刻支持自己的父母，或是能找到一两个知己，那都是再好不过的。 然后是心理环境，迷失主要源于不断的自我怀疑。很多时候我们自以为可以被称为烦恼的东西其实都不是烦恼，在时间的长河里甚至连浪花都算不上。不妨想一想，你有多少次烦恼源于自我否定。例如，我认为自己没有好听的声音，所以不能上台唱歌；或是我认为自己没有足够的实力，所以无法参加比赛等等。能不能自由的表演只有在你尝试了才知道，所以，如果真心想做，大胆去做、不断练习就可以了，没有那么多犹豫与烦恼，只有决心的有无。 安身立命、强大内心、追逐热爱，永远闪闪发光。 祝愿看到这篇随笔的各位都能找寻到自己想要的生活。 希望对最近情绪状态不好的uu们能有所帮助。 ","date":"2022-10-30","objectID":"/%E7%9B%BC%E5%A4%B4/:0:0","tags":["迷失","盼头"],"title":"拨云开雾处，是一片星河","uri":"/%E7%9B%BC%E5%A4%B4/"},{"categories":["留学"],"content":"基本背景 上海大学，计算机工程与科学学院，计算机科学与技术 先留个qq：1825103317，有需要的可以加 学分成绩及其排名 GPA: 3.52/4.00（毕设拉上去了一点点，申请时3.50） Rank: 估计30%-35% 但是美国你只要10%排名以外就都不看排名，看绩点绝对值 其他成绩如语言，技能证书等 CET-4: 620左右，CET-6：580左右（出国不看） TOEFL: 101 (Speaking: 20) GRE: 150V + 170Q + 3.5 奖励证书/奖学金 啥都没有，我就是究极菜菜子 本来可能大一的时候有的，后来从机自转专业来计科了，就不给我发了，坏得很） 科研/实习/项目 实习是当初学院的就业群里找的，千寻位置，cv工程师（实习基本不看） 科研也算在实验室混了两年了，前跟着方昱春老师，后跟着丁雪海老师，医学图像方向，带一篇医学的水论文 ","date":"2022-10-14","objectID":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/:1:0","tags":["18级","CS","计院","出国","美国","JHU"],"title":"18-CS-MSSI-JHU","uri":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/"},{"categories":["留学"],"content":"申请流程与结果 最终录取学校：Johns Hopkins University, Master of Science in Security Informatics 这学院每门课80才让你毕业，要命了 下面是我差点全聚德的申请结果，真的是莽冲，英美澳混建议后来人不要申请cs专业，改投擦边的is，ce，软件管理，ece，信息安全等 Offer(3): School Program John Hopkins University MS Security Informatics NYU Courant MSIS Sydney Master of Information Technology Rej(13): School Program Columbia University EECS John Hopkins University MS Computer Science University of Southern California Master of Computer Science Boston University MS in Computer Science Northeastern University MS in Computer Science Rice University Master of Computer Science Washington St Louis Master of Computer Science UC Irvine Master of Software Engineering NYU Tandon MS Computer Science UCL MSCS Imperial College MSCS Edinburgh MSCS Carnegie Mellon University MISM ","date":"2022-10-14","objectID":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/:2:0","tags":["18级","CS","计院","出国","美国","JHU"],"title":"18-CS-MSSI-JHU","uri":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/"},{"categories":["留学"],"content":"申请心得 ","date":"2022-10-14","objectID":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/:3:0","tags":["18级","CS","计院","出国","美国","JHU"],"title":"18-CS-MSSI-JHU","uri":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/"},{"categories":["留学"],"content":"为什么要出国: 乐了，我会说我大一的时候就签了留学中介吗，现在看起来真的血亏，真的就文书加cv，完全可以找外国人直接给你写啊，或者上fiverr等网站，真的很便宜，中介完全就是打了信息差（扯远了），在此无脑推荐b站超哥留学，买他系统班血赚。 先分享个我这整理的资料包，涵盖了美国申请的各方面，且有上万录取案例（一亩三分地爬虫数据，照着选校绝对比中介靠谱，但是22fall难度暴涨，需要慎重选校） 链接：https://pan.baidu.com/s/1mY3w7bcGKcqBBnup5L9IHg 提取码：6aeg –来自百度网盘超级会员V5的分享 扯远了，为什么要出国讲道理其实我到现在也没想得特别明白（哪怕我现在已经在国外了）。 大一到大三大概只是想着，出国留学镀金后回国。大四，经历了在公司，学校，家里三次隔离再加上上海的3个月隔离，直接心态又发生了微妙的转变。（可能这就是对自由的向往吧），虽然到现在还没想好毕业是选择在哪里工作。 ","date":"2022-10-14","objectID":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/:3:1","tags":["18级","CS","计院","出国","美国","JHU"],"title":"18-CS-MSSI-JHU","uri":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/"},{"categories":["留学"],"content":"给卷王指条明路: 这么说吧，如果真的早做准备，大一大二把gre干出来，大三把托福干出来，保住gpa，拉到3.7 科研上，大二就找个老师混实验室，这里要多说几句了，计算机学院这边还是有几个老师很强的。因为出国的时候，推荐信就很重要，然后老师如果有留学背景或者和哪些外国老师有connection就特别的占便宜，能够让最终的申请结果提高一档。但是，这也是一个利益交换的事情，你必须付出1-2年在该老师的实验室那边打杂，甚至发论文。 所以在此推荐： 岳xd老师，医学图像方向 某sci审稿人，传闻隔壁通信学院一起冲这个期刊然后被迫将该期刊排除在毕业要求之外） 方yc老师，也是有法国的留洋背景，存在一定程度上的欧洲地区的connection 武星老师，忘了是早稻田还是东大，有这两学校的关系可以推博士 ","date":"2022-10-14","objectID":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/:3:2","tags":["18级","CS","计院","出国","美国","JHU"],"title":"18-CS-MSSI-JHU","uri":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/"},{"categories":["留学"],"content":"给润润人指条路: 其实出国党也是分为两条路，一是毕业就回国，二是留下工作。 对于美国而言，文科必定回国，因为找不到工作，商科也难，留美必选计算机或者泛计算机。最终，所有留学生中大概有20%的人能够留下来。但是这当中就需要考虑的很多了。如果你是一个硕士，估计要10年才能拿到绿卡（也就是说你这十年都要在美国工作），而博士，则要5-6年。具体怎么算的我就不说了，可以上一亩三分地看。再看美国的就业形式，2022年也是比较特殊，大家一致认为23年开始衰退，各位见仁见智。 ","date":"2022-10-14","objectID":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/:3:3","tags":["18级","CS","计院","出国","美国","JHU"],"title":"18-CS-MSSI-JHU","uri":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/"},{"categories":["留学"],"content":"结尾 就我个人的申请背景而言，录取了这个学校应该说是撞大运了。 可以加qq：1825103317，公众号：梨汁与菌爆肝日常 ","date":"2022-10-14","objectID":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/:4:0","tags":["18级","CS","计院","出国","美国","JHU"],"title":"18-CS-MSSI-JHU","uri":"/18-cs-%E5%87%BA%E5%9B%BD-mssi-jhu/"},{"categories":[],"content":"1. 本地配置 ","date":"2022-09-13","objectID":"/blogstory/:1:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"1.1 git相关资源下载 下载git 安装相关包管理器，例如npm和yum，包管理器中含有某些博客主题需要的依赖 设置git账号：global、local ","date":"2022-09-13","objectID":"/blogstory/:1:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"1.2 hugo下载 上官方网站进行下载，详情请见hugo release，注意下载hugo-extended版，适配性更强。 下载完毕后，将文件路径/bin加入环境变量，重启电脑，打开命令行输入命令hugo version，若产生hugo版本号则证明安装完成。 ","date":"2022-09-13","objectID":"/blogstory/:1:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"1.3 博客的配置 主流的个人博客搭建引擎包括hexo和hugo，这两个文件的主要差别在于主题配置的读取上，hexo博客根目录下的config.yaml文件比theme主题内置的config.yaml文件优先级更低，如果在根目录配置下指明了主题文件信息，那么引擎就会优先渲染后者；hugo与此相反，更侧重于主题文件的更新维护，所以一般需要将主题文件的配置拷贝到根目录下。具体的差异可以参考hexo与hugo的异同。 我的博客用的是hugo-lovelt主题，主题配置参考lovelt官方文档即可，根目录主题配置记得参照主题文档examplesite下的.conf文件。 在博客的主题的选择上，我踩了很多坑，一些主题文档的维护相当不好。在选择一款喜欢的主题时，一定要关注官方文档的质量哦。 ","date":"2022-09-13","objectID":"/blogstory/:1:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2. 云服务器配置 ","date":"2022-09-13","objectID":"/blogstory/:2:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2.1 云主机购买与配置 云主机的选择：阿里云、腾讯云、华为云，这三款是主流。 关于云主机的购买，具体可参考acwing-linux相关课程： 云服务器的购买 云主机的配置： 我购买的是腾讯云的轻量级服务器，系统为linux下的ubuntu。在系统分配好云主机后，我们的初始化登录是一个叫ubuntu的账户。与一般的云服务器不同，腾讯云初始化没有root用户，但ubuntu拥有sudo权限。注意sudo权限与root权限有一定差异。具体的差异详见sudo与root。 然后我们可以进行的一些操作： 2.1.1 创建acs用户 建立： # ubuntu根目录~下 adduser acs # 创建用户acs usermod -aG sudo acs # 给用户acs分配sudo权限 查看是否成功： 注意当我们cd acs或ubuntu时会进入到它们的根目录，但这个电脑下的系统设置文件在/下，也就是说，我们需要cd /才能看到到这台主机下的所有配置文件。同时，我们之后下载的很多文件都会被保存在/etc中。 2.1.2 安装tmux和docker tmux安装教程 sudo apt-get update # linux从服务器获取软件更新情况 sudo apt-get install tmux 在安装完成后，可以通过scp将一些tmux配置文件上传至云端，启用tmux，然后在命令行进行些许配置即可完成对tmux的美化。 tmux # ctrl + b : 进入tmux命令行模式 source-file ~/.tmux.conf # 让tmux配置生效 docker安装教程 在用户（有sudo权限，比如ubuntu）根目录下，按照docker-ubuntu 安装说明中的\"Install using the repository\"进行安装即可，注意一条条cv执行命令。 ","date":"2022-09-13","objectID":"/blogstory/:2:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2.2 域名的购买与ssl证书申请 购买方面，挑选自己喜欢的域名进行购买即可。 在购买完域名后，需要经过实名验证、域名审核等流程。 之后可以申请ssl安全证书，一切按照腾讯云指引操作即可。 在申请完成后，可以对证书进行下载，会得到五个文件，我们只需要将其中的密钥对文件进行移动就行，后缀分别为.crt和.key，目标位置为/etc/nginx 为了网站长期的运行，我们需要对域名进行备案，这是国内的法律要求。 ","date":"2022-09-13","objectID":"/blogstory/:2:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2.3 nginx的下载与配置 2.3.1 nginx下载与基础配置 下载方面，可以参照ubuntu安装nginx，内容非常详细，特别注意不同文件的安装位置，由于root用户初始化一般不存在，所以在安装时应该在sudo权限用户下使用sudo apt-get install nginx进行安装。 在安装完成后，我们进行一些基础设置： # 设置开机启动nginx sudo systemctl enable nginx # 启动nginx sudo systemctl start nginx # 查看是否启动nginx sudo systemctl status nginx # 逐行执行 在浏览器搜索框输入服务器公网ip地址，如果会出现nginx的页面，说明可以导航到服务器，即nginx安装成功。为了使外部用户可以访问web服务器，需要开放防火墙，主要是80端口和443端口，可以在服务器的控制台手动设置，同时也可以命令行设置： sudo firewall-cmd --permanent --zone=public --add-service=http sudo firewall-cmd --permanent --zone=public --add-service=https sudo firewall-cmd --reload 2.3.2 nginx高级配置 仿照hugo-txcloud-nginx中的nginx.conf进行配置即可。 ","date":"2022-09-13","objectID":"/blogstory/:2:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3. 建立本地与云端的联系 ","date":"2022-09-13","objectID":"/blogstory/:3:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3.1 初步连接 使用ssh工具进行远程访问 ssh username@server_ip 交互窗口会提醒你输入密码 ","date":"2022-09-13","objectID":"/blogstory/:3:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3.2 配置免密登录 在完成过远程访问后，就可以配置免密登录。 在本地进入 ~/.ssh ssh-keygen -t rsa 生成密钥，按照指引为密钥添加文件名 密钥生成教程可访问 https://blog.csdn.net/qq_40932679/article/details/117487540 然后按照下述命令将公钥添加到远程服务器，最终会被添加在.ssh中的authorized_key文件内 ssh-agent bash # 启动ssh高速缓存 ssh-add -i ~/.ssh/txcloud.pub username@server_ip # 将公钥添加到目标用户端下 关于ssh-agent可以参考 https://blog.csdn.net/weixin_43972437/article/details/114578337 接着，在.ssh/查看有无config文件，若没有就新建一个 打开config文件，按照如下格式进行配置 # 腾讯云 Host server1 HostName 43.143.88.173 User acs IdentityFile ~/.ssh/txcloud Host server0 HostName 43.143.88.173 User ubuntu IdentityFile ~/.ssh/txcloud 这样我们的免密登录就配置好了，注意到，对不同用户要进行分别配置，但它们所使用的公密钥可以相同。 ","date":"2022-09-13","objectID":"/blogstory/:3:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3.3 使用winscp与云端进行图形化文件交互 winscp下载 如果连接用户并非root用户，参考winscp修复远程连接进行修改 ","date":"2022-09-13","objectID":"/blogstory/:3:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4. 建立本地与github的联系 ","date":"2022-09-13","objectID":"/blogstory/:4:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4.1 git账号管理 使用邮箱注册github账号，并登录 在本地使用命令ssh-keygen -t rsa -C \"username@server_ip\"生成注释 为“username@server_ip”的密钥对，在生成的过程中可以为密钥对命名。然后将公钥.pub文件的内容进行复制，在github用户setting下的SSH and GPG keys模块新建ssh key，key name任意取，将公钥内容添加到下方加密区，完成添加。 回到本地， 如果git存在多账号，那么需要按如下方式进行管理，打开config文件: # github user Host X Hostname github.com User BreezEcho PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_x # github user Host Y Hostname github.com User huansong-dev PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_y 关于git多账号配置详情请见 https://www.cnblogs.com/wanan-happy/p/14588504.html 然后将私钥加入ssh-agent进行管理：ssh-add id_rsa_x 、ssh-add id_rsa_y 在配置完成后，可以使用ssh -T git@X来检验是否完成了连接 为了使用便利，我们可以将常用的账号设置为全局账号 git config --global user.name username git config --global user.email useremail 如果在某个仓库需要使用特殊账号，可以进行如下操作 cd base # 进入该仓库 git config --local user.name username git config --local user.email useremail ","date":"2022-09-13","objectID":"/blogstory/:4:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4.2 建立本地仓库与远程仓库的联系 远程新建名为为user_id.src的私人仓库，用于管理博客项目 本地新建仓库hblog，如果是hugo site，执行hugo new site hblog 在设置好仓库账号后，进入hblog，并按照如下操作进行关联 git init # 初始化为git本地仓库 git remote -v # 查看关联情况 git remote add origin git@X:username/username.github.io.git # 建立联系 ","date":"2022-09-13","objectID":"/blogstory/:4:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4.3 博客项目文件推送 # 进入博客根目录 touch .nojekyll # 默认不使用github pages自带的jekyll主题，空文件 git add . # 为所有文件添加追踪，之后的一切变化都可以通过git status进行查看 git commit -m \"ud\" # 将追踪文件的变化上传到本地仓库 git push -u origin master # 首次推送信息，之后可以将-u省去 之后如果远程仓库有变化，需要先git pull origin master，可能会出现git merge提醒，这个时候允许合并，然后再执行上述步骤。 ","date":"2022-09-13","objectID":"/blogstory/:4:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"5. 使用github actions将博客展示文件部署到github pages与云端服务器 主要参考： hugo双端部署，给我最大灵感的文章。 hugo+github action 少数派 ","date":"2022-09-13","objectID":"/blogstory/:5:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"5.1 github actions + public -\u003e github pages 5.1.1 赋予项目仓库访问本账号下其它仓库的特权 新建名为user_id.github.io的公共仓库，注意user_id为你的用户名，这样的名称格式相对固定。这个仓库用来展示我们的博客内容。 进入github用户界面的setting下: 选择右上角新建个人密钥，选中repo和workflow，然后点击生成。注意密钥只会出现一次，记得复制。将这里得到的密钥添加到我们项目仓库的actions secrets，并命名为PERSONAL_TOKEN 5.1.2 建立github actions工作流 首先，我们将项目仓库的默认分支改为master(setting中)，然后进入项目actions模块，新建工作流文件gh-pages.yml，配置参考如下，可按需求进行修改： name: deploy on: push: workflow_dispatch: schedule: # Runs everyday at 8:00 AM - cron: \"0 0 * * *\" jobs: build: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \"latest\" - name: Build Web run: hugo - name: Deploy Web uses: peaceiris/actions-gh-pages@v3 with: PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }} EXTERNAL_REPOSITORY: pseudoyu/pseudoyu.github.io PUBLISH_BRANCH: master PUBLISH_DIR: ./public commit_message: ${{ github.event.head_commit.message }} 然后等待一段时间，就可以看到工作流正常，进入博客展示仓库，可以发现多了一个master分支。 一段时间后，访问站点user_id.github.io就可以看到博客内容啦。 ","date":"2022-09-13","objectID":"/blogstory/:5:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"5.2 github actions + public -\u003e txcloud 5.2.1 给予项目仓库访问云服务器的特权 与本地密钥访问云服务器类似，我们需要先得到一个密钥对，然后分别将公钥和密钥置入服务端与用户端。 在本地ssh-keygen -t rsa 创建密钥对，参考上述步骤将公钥放入云端用户的authorized_key中，将私钥放入项目仓库的actions secrets内。 这个操作告诉我们密钥在哪里产生不重要，重要的是公钥与私钥的位置，就像锁与匙。 5.2.2 维护文件权限 在云主机相应用户目录下新建public空文件夹，通过ls -al命令我们发现文件的所有人以及组内用户都是合理的。如果之前public文件位置与此不符，就需要对nginx配置文件进行调整。 5.2.3 更新项目仓库actions文件 在gh-pages.yml文件中添加以下模块，并根据实际情况做一些修改，注意yaml文件的格式。 - name: Deploy Tencent Cloud uses: wlixcc/SFTP-Deploy-Action@v1.2.4 with: username: 'root' #ssh user name server: '${{ secrets.SERVER_IP }}' #引用之前创建好的secret ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} #引用之前创建好的secret local_path: './public' # 对应我们项目public的文件夹路径，注意不能访问内部文件，因为此处没有令牌 remote_path: '/home/username/' # 对应云上的目录 等待片刻，观察工作流正常，进入云主机对应文件夹，发现文件已更新，同时权限正确。至此，github actions云部署完成。 ","date":"2022-09-13","objectID":"/blogstory/:5:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"6. 结语 这次经历让我意识到，弯路，也是成长的一部分；同时，在项目中的学习效率是非常高的，当然还需要不断更新信息搜集算法。这篇文章会在后面慢慢丰富，形成一篇合格的教程。 ","date":"2022-09-13","objectID":"/blogstory/:6:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"你好，这是一个测试文档","date":"2022-09-10","objectID":"/%E6%B5%8B%E8%AF%95/","tags":[],"title":"Go Syntax","uri":"/%E6%B5%8B%E8%AF%95/"},{"categories":[],"content":"你好 Part of this article is encrypted with password: Unlock --- DON'T MODIFY THIS LINE --- ## 包、变量和函数 待填 ## 流程控制语句（for、if、else、switch和defer） 待填 ## 实用的类型 ### 切片 + 相关特性 1. 切片的长度len：切片内包含元素的数量 2. 切片的容量cap：受切片起点影响，由当前对数组引用形成的切片起点，到原数组末的元素数量 3. 当切片的长度与容量皆为0，则切片又被命名为nil（零值） + 特点 1. 切片是基于数组但又更灵活的 2. 通过append(s, elem)能够将若干元素加入切片 ### Range遍历 - 可以用Range来遍历数组 - Range在遍历各元素时，会返回当前元素的下标和数值，因此在循环遍历中需要用两个变量来承接，如果不需要某个方面如下标，可以用_填充该方面，一般会先返回下标，再返回数值。若只要索引，可以忽略掉第二个变量 ### 映射 + 相关描述 1. 映射将键连接到值 2. 映射的零值是nil，nil既没有键，也没有值 3. make函数会返回给定类型的映射，并将其初始化，通常用make来无参初始化一个映射 ```go m = make(map[int]Vertex) … m[“hello”] = 8 // 对映射进行设置 ``` * 映射的文法 ```go var m = map[string]Vertex{ \"Bell Labs\": Vertex{ 40.68433, -74.39967, }, \"Google\": Vertex{ 37.42202, -122.08408, }, } ``` 若顶级类型为一个系统类型名，则可以省略，例如上述的{}中的Vertex * 对映射的高级处理（在上述基础上） ```go m[“a”] = 1 m[“a”] = 2 // 修改映射 elem = m[“a”] // 获取键对应的值 v, ok = m[“a”] // 查询键a是否在映射中, 若不在映射，则将v作为键“a“的零值 ``` ### 函数 - 函数不仅可以做参数，还可以做函数的返回值 ```go package main import ( \"fmt\" \"math\" ) func compute(fn func(float64, float64) float64) float64 { return fn(3, 4) } // 函数可以做参数 func main() { hypot := func(x, y float64) float64 { return math.Sqrt(x*x + y*y) // 函数可以做返回值 } fmt.Println(hypot(5, 12)) fmt.Println(compute(hypot)) fmt.Println(compute(math.Pow)) } ``` ### 函数的闭包 Go 函数可以是一个闭包。闭包是一个函数值，它引用了其函数体之外的变量。该函数可以访问并赋予其引用的变量的值，换句话说，该函数被这些变量“绑定”在一起。 也就是说Go函数可以实现自给自足，它的参数由内部参数决定，这样的结构使得其能够简化为名义上的函数值 - 代码体现： ```go package main import \"fmt\" func adder() func(int) int { sum := 0 return func(x int) int { sum += x return sum } } func main() { pos, neg := adder(), adder() for i := 0; i \u003c 10; i++ { fmt.Println( pos(i), neg(-2*i), ) } } ``` 例如，函数 `adder` 返回一个闭包。每个闭包都被绑定在其各自的 `sum` 变量上。 - 一个闭包的简单示例 ```go // 利用函数的闭包实现斐波那契数列 package main import \"fmt\" // 返回一个“返回int的函数”（注意返回值的书写方法 func fibonacci() func() int { sum := 1 m := -1 return func() int{ k := sum sum += m m = k return sum } } func main() { f := fibonacci() for i := 0; i \u003c 10; i++ { fmt.Println(f()) } } ``` ## 方法和接口 ### 方法 #### 1. 用结构体作为方法接收者 Go没有类，但可以为结构体赋予方法，结构体对象可以做方法接收者 ```go type Vertex struct { X, Y float64 } func (v Vertex) Abs() float64 { return math.Sqrt(v.X*v.X + v.Y*v.Y) } ``` 这样的话就可以调用`v.Abs()`处理v内部数据 **方法只是带接受者参数的函数**，但是方法一般不称为函数，如果令v作为Abs的形式参数，那么依然有Abs(v)，存在同样的效果。同时，也可以为非结构体类型声明方法，比如为基本数据类型取别名，然后为别名类型赋予方法。 但是，要注意接收者的类型定义和方法声明必须在同一包内，不能为内建类型声明方法。 #### 2.用结构体指针作为方法接收者 作为方法的函数可以对接收者内的元素进行直接的操作，若要使得操作生效，就需要将一般方法接收者升级为指向改接受者的指针，否则函数修改的只是接收者的副本，并不会对原结构体类型生效。 ```go func (*v Vertex) Scale(f float64) { v.X = v.X * f v.Y = v.Y * f } ``` #### 3.指针重定向 - 通常带指针参数的函数只能接收指针类型实参，值传递型函数只接受值传入。但方法不同，如果接受者为指针类型，那么在调用方法时接收者可以为值也可以为指针类型，因为系统会将值解释为指针类型，即实现定向。 ```go var v Vertex v.Scale(5) // OK p := \u0026v p.Scale(10) // OK ``` + 同样的事情也发生在相反的方向，当方法的接受者为值类型，那么在调用方法时如果接收者为指针，系统会将其转化为值类型 ```go var v Vertex fmt.Println(v.Abs()) // OK p := \u0026v fmt.Println(p.Abs()) // OK ``` #### 4.选择值或指针做接收者 - 使用指针接收者的原因有二： 1. 首先，方法能够修改其接收者指向的值。 2. 其次，这样可以避免在每次调用方法时复制该值。若值的类型为大型结构体时，这样做会更加高效。 3. 通常来说，所有给定类型的方法都应该有值或指针接收者，但并不应该二者混用 ### 接口 #### 1.相关描述 - 接口是一种数据类型，是由一组方法签名定义的集合 - 接口类型的变量可以保存任何实现了这些方法的值 - 外界参量需与接口内部方法的接受者类型保持一致才能够让接口保存参量 代码片段如下： ```go func (v *Vertex) Abs() float64 { return math.Sqrt(v.X*v.X + v.Y*v.Y) } type Abser interface { Abs() float64 } func main() { var a Abser f := MyFloat(-math.Sqrt2) v := Vertex{3, 4} a = f // a MyFloat 实现了 Abser a = \u0026v // a *Vertex 实现了 Abser // 下面一行，v 是一个 Vertex（而不是 *Vertex） // 所以没有实现 Abser。 a = v fmt.Println(a.Abs()) } ``` #### 2.接口与隐式实现 - 类型通过实现一个接口的所有方法来实现该接口。既然无需专门显式声明，也就没有“implements”关键字。 - 隐式接口从接口的实现中解耦了定义，这样接口的实现可以出现在任何包中，无需提前准备。 - 因此，也就无需在每一个实现上增加新的接口名称，这样同时也鼓励了明确的接口定义。 这个刚开始会有点难理解，不过可以通过代码来简化我们的理解： ```go type I interface { M() N() } type T struct { S string } // 此方法表示类型 T 实现了接口 I，但我们无需显式声明此事。 func (t T) M() { fmt.Println(t.S) } func (t T) N() { fmt.Println(t.S, \"World\") } func main() { var i I = T{\"hello\"} i.M() i.N() } ``` 如果实际接收者与接口内方法接收者类型相同，那么该数据类型表示便可以用接口名替换，该接收者也可以调用接口内对应方法。 ","date":"2022-09-10","objectID":"/%E6%B5%8B%E8%AF%95/:0:0","tags":[],"title":"Go Syntax","uri":"/%E6%B5%8B%E8%AF%95/"},{"categories":["documentation"],"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it.","date":"2020-03-06","objectID":"/theme-documentation-basics/","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:0:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"1 Requirements Thanks to the simplicity of Hugo, Hugo is the only dependency of this theme. Just install latest version of :(far fa-file-archive fa-fw): Hugo (\u003e 0.62.0) for your OS (Windows, Linux, macOS). Why not support earlier versions of Hugo? Since Markdown Render Hooks was introduced in the Hugo Christmas Edition, this theme only supports Hugo versions above 0.62.0. Hugo extended version is recommended Since some features of this theme need to processes :(fab fa-sass fa-fw): SCSS to :(fab fa-css3 fa-fw): CSS, it is recommended to use Hugo extended version for better experience. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:1:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2 Installation The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.1 Create Your Project Hugo provides a new command to create a new website: hugo new site my_website cd my_website ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.2 Install the Theme The LoveIt theme’s repository is: https://github.com/dillonzq/LoveIt. You can download the latest release :(far fa-file-archive fa-fw): .zip file of the theme and extract it in the themes directory. Alternatively, clone this repository to the themes directory: git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt Or, create an empty git repository and make this repository a submodule of your site directory: git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.3 Basic Configuration The following is a basic configuration for the LoveIt theme: baseURL = \"http://example.org/\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" # website title title = \"My New Hugo Site\" # language code [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"en\" # language name [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"English\" # Author config [author] name = \"xxxx\" email = \"\" link = \"\" # Menu config [menu] [[menu.main]] weight = 1 identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" # Markup related configuration in Hugo [markup] # Syntax Highlighting (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false is a necessary configuration (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false Note When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.4 Create Your First Post Here is the way to create your first post: hugo new posts/first_post.md Feel free to edit the post file by adding some sample content and replacing the title value in the beginning of the file. Note By default all posts and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata, set the property draft: false or add -D/--buildDrafts parameter to hugo command. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:4","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.5 Launching the Website Locally Launch by using the following command: hugo serve Go to http://localhost:1313. Basic configuration preview Tip When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Note Since the theme use .Scratch in Hugo to implement some features, it is highly recommended that you add --disableFastRender parameter to hugo server command for the live preview of the page you are editing. hugo serve --disableFastRender ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:5","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"2.6 Build the Website When your site is ready to deploy, run the following command: hugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server. Tip The website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use AWS Amplify, Github pages, Render and more… ","date":"2020-03-06","objectID":"/theme-documentation-basics/:2:6","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3 Configuration ","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.1 Site Configuration In addition to Hugo global configuration and menu configuration, LoveIt lets you define the following parameters in your site configuration (here is a config.toml, whose values are default). Please open the code block below to view the complete sample configuration :(far fa-hand-point-down fa-fw):: baseURL = \"http://example.org/\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" # website title title = \"My New Hugo Site\" # language code [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"en\" # language name [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"English\" # whether to include Chinese/Japanese/Korean hasCJKLanguage = false # default amount of posts in each pages paginate = 12 # google analytics code [UA-XXXXXXXX-X] googleAnalytics = \"\" # copyright description used only for seo schema copyright = \"\" # whether to use robots.txt enableRobotsTXT = true # whether to use git commit log enableGitInfo = true # whether to use emoji code enableEmoji = true # ignore some build errors ignoreErrors = [\"error-remote-getjson\", \"error-missing-instagram-accesstoken\"] # Author config [author] name = \"xxxx\" email = \"\" link = \"\" # Menu config [menu] [[menu.main]] weight = 1 identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" [params] # site default theme [\"auto\", \"light\", \"dark\"] defaultTheme = \"auto\" # public git repo url only then enableGitInfo is true gitRepo = \"\" # which hash function used for SRI, when empty, no SRI is used # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"\" # date format dateFormat = \"2006-01-02\" # website title for Open Graph and Twitter Cards title = \"My cool site\" # website description for RSS, SEO, Open Graph and Twitter Cards description = \"This is my cool site\" # website images for Open Graph and Twitter Cards images = [\"/logo.png\"] # Header config [params.header] # desktop header mode [\"fixed\", \"normal\", \"auto\"] desktopMode = \"fixed\" # mobile header mode [\"fixed\", \"normal\", \"auto\"] mobileMode = \"auto\" # Header title config [params.header.title] # URL of the LOGO logo = \"\" # title name name = \"\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" # whether to use typeit animation for title name typeit = false # Footer config [params.footer] enable = true # Custom content (HTML format is supported) custom = '' # whether to show Hugo and theme info hugo = true # whether to show copyright info copyright = true # whether to show the author author = true # Site creation time since = 2019 # ICP info only in China (HTML format is supported) icp = \"\" # license info (HTML format is supported) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (all posts) page config [params.section] # special amount of posts in each section page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # List (category or tag) page config [params.list] # special amount of posts in each list page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # App icon config [params.app] # optional site title override for the app when added to an iOS home screen or Android launcher title = \"My cool site\" # whether to omit favicon resource links noFavicon = f","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.2 Favicons, Browserconfig, Manifest It is recommended to put your own favicons: apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) into /static. They’re easily created via https://realfavicongenerator.net/. Customize browserconfig.xml and site.webmanifest to set theme-color and background-color. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"3.3 Style Customization Note Hugo extended version is necessary for the style customization. LoveIt theme has been built to be as configurable as possible by defining custom .scss style files. The directory including the custom .scss style files is assets/css relative to your project root directory. In assets/css/_override.scss, you can override the variables in themes/LoveIt/assets/css/_variables.scss to customize the style. Here is a example: @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; In assets/css/_custom.scss, you can add some css style code to customize the style. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:3:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4 Multilingual and i18n LoveIt theme is fully compatible with Hugo multilingual mode, which provides in-browser language switching. Language Switch ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.1 Compatibility Language Hugo Code HTML lang Attribute Theme Docs Lunr.js Support English en en :(far fa-check-square fa-fw): :(far fa-check-square fa-fw): Simplified Chinese zh-cn zh-CN :(far fa-check-square fa-fw): :(far fa-check-square fa-fw): Traditional Chinese zh-tw zh-TW :(far fa-square fa-fw): :(far fa-check-square fa-fw): French fr fr :(far fa-square fa-fw): :(far fa-check-square fa-fw): Polish pl pl :(far fa-square fa-fw): :(far fa-square fa-fw): Brazilian Portuguese pt-br pt-BR :(far fa-square fa-fw): :(far fa-check-square fa-fw): Italian it it :(far fa-square fa-fw): :(far fa-check-square fa-fw): Spanish es es :(far fa-square fa-fw): :(far fa-check-square fa-fw): German de de :(far fa-square fa-fw): :(far fa-check-square fa-fw): German de de :(far fa-square fa-fw): :(far fa-check-square fa-fw): Serbian sr sr :(far fa-square fa-fw): :(far fa-square fa-fw): Russian ru ru :(far fa-square fa-fw): :(far fa-check-square fa-fw): Romanian ro ro :(far fa-square fa-fw): :(far fa-check-square fa-fw): Vietnamese vi vi :(far fa-square fa-fw): :(far fa-check-square fa-fw): Arabic ar ar :(far fa-square fa-fw): :(far fa-check-square fa-fw): Catalan ca ca :(far fa-square fa-fw): :(far fa-square fa-fw): Thai th th :(far fa-square fa-fw): :(far fa-check-square fa-fw): Telugu te te :(far fa-square fa-fw): :(far fa-square fa-fw): Indonesian id id :(far fa-square fa-fw): :(far fa-square fa-fw): Turkish tr tr :(far fa-square fa-fw): :(far fa-check-square fa-fw): Korean ko ko :(far fa-square fa-fw): :(far fa-square fa-fw): Hindi hi hi :(far fa-square fa-fw): :(far fa-square fa-fw): ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.2 Basic Configuration After learning how Hugo handle multilingual websites, define your languages in your site configuration. For example with English, Chinese and French website: # determines default content language [\"en\", \"zh-cn\", \"fr\", \"pl\", ...] defaultContentLanguage = \"en\" [languages] [languages.en] weight = 1 title = \"My New Hugo Site\" languageCode = \"en\" languageName = \"English\" [[languages.en.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" [[languages.en.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[languages.en.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" [languages.zh-cn] weight = 2 title = \"我的全新 Hugo 网站\" languageCode = \"zh-CN\" languageName = \"简体中文\" hasCJKLanguage = true [[languages.zh-cn.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"文章\" url = \"/posts/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [languages.fr] weight = 3 title = \"Mon nouveau site Hugo\" languageCode = \"fr\" languageName = \"Français\" [[languages.fr.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Postes\" url = \"/posts/\" title = \"\" [[languages.fr.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Balises\" url = \"/tags/\" title = \"\" [[languages.fr.menu.main]] weight = 3 identifier = \"categories\" name = \"Catégories\" pre = \"\" post = \"\" url = \"/categories/\" title = \"\" Then, for each new page, append the language code to the file name. Single file my-page.md is split in three files: in English: my-page.en.md in Chinese: my-page.zh-cn.md in French: my-page.fr.md Note Be aware that only translated pages are displayed in menu. It’s not replaced with default language content. Tip Use Front Matter parameter to translate urls too. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"4.3 Overwrite Translation Strings Translations strings are used for common default values used in the theme. Translations are available in some languages, but you may use another language or want to override default values. To override these values, create a new file in your local i18n folder i18n/\u003clanguageCode\u003e.toml and inspire yourself from themes/LoveIt/i18n/en.toml. By the way, as these translations could be used by other people, please take the time to propose a translation by :(fas fa-code-branch fa-fw): making a PR to the theme! ","date":"2020-03-06","objectID":"/theme-documentation-basics/:4:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"5 Search Based on Lunr.js or algolia, searching is supported in LoveIt theme. ","date":"2020-03-06","objectID":"/theme-documentation-basics/:5:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"5.1 Output Configuration In order to generate index.json for searching, add JSON output file type to the home of the outputs part in your site configuration. [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"2020-03-06","objectID":"/theme-documentation-basics/:5:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":["documentation"],"content":"5.2 Search Configuration Based on index.json generated by Hugo, you could activate searching. Here is the search configuration in your site configuration: [params.search] enable = true # type of search engine [\"lunr\", \"algolia\"] type = \"lunr\" # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \"\" # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \"em\" # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" How to choose search engine? The following is a comparison of two search engines: lunr: simple, no need to synchronize index.json, no limit for contentLength, but high bandwidth and low performance (Especially for Chinese which needs a large segmentit library) algolia: high performance and low bandwidth, but need to synchronize index.json and limit for contentLength The content of the post is separated by h2 and h3 HTML tag to improve query performance and basically implement full-text search. contentLength is used to limit the max index length of the part starting with h2 and h3 HTML tag. Tips about algolia You need to upload index.json files to algolia to activate searching. You could upload the index.json files by browsers but a CLI tool may be better. The official Algolia CLI is a good choice. To be compatible with Hugo multilingual mode, you need to upload different index.json for each language to the different index of algolia, such as zh-cn/index.json or fr/index.json… ","date":"2020-03-06","objectID":"/theme-documentation-basics/:5:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/theme-documentation-basics/"},{"categories":null,"content":"About LoveIt","date":"2019-08-02","objectID":"/about/","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":" :(far fa-kiss-wink-heart fa-fw): LoveIt is a clean, elegant but advanced blog theme for Hugo developed by  Dillon. It is based on the original LeaveIt Theme and KeepIt Theme. Hugo Theme LoveIt ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Features ","date":"2019-08-02","objectID":"/about/:1:0","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Performance and SEO :(fas fa-rocket fa-fw): Optimized for performance: [99]/[100] on mobile and [100]/[100] on desktop in Google PageSpeed Insights :(fab fa-searchengin fa-fw): Optimized SEO performance with a correct SEO SCHEMA based on JSON-LD :(fab fa-google fa-fw): Google Analytics supported :(far fa-chart-bar fa-fw): Fathom Analytics supported :(fas fa-chart-column fa-fw): Plausible Analytics supported :(fab fa-yandex-international fa-fw): Yandex Metrica supported :(fas fa-sitemap fa-fw): Search engine verification supported (Google, Bind, Yandex and Baidu) :(fas fa-tachometer-alt fa-fw): CDN for third-party libraries supported :(fas fa-cloud-download-alt fa-fw): Automatically converted images with Lazy Load by lazysizes ","date":"2019-08-02","objectID":"/about/:1:1","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Appearance and Layout :(fas fa-mobile-screen fa-fw): [Desktop]/[Mobile] responsive layout :(fas fa-circle-half-stroke fa-rotate-180 fa-fw): [Light]/[Dark] mode :(fas fa-layer-group fa-fw): Globally consistent design language :(fas fa-ellipsis-h fa-fw): Pagination supported :(far fa-list-alt fa-fw): Easy-to-use and self-expanding table of contents :(fas fa-language fa-fw): Multilanguage supported and i18n ready :(fab fa-css3-alt fa-fw): Beautiful CSS animation ","date":"2019-08-02","objectID":"/about/:1:2","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Social and Comment Systems :(far fa-user fa-fw): Gravatar supported by Gravatar :(fas fa-user-circle fa-fw): Local Avatar supported :(far fa-id-card fa-fw): Up to 73 social links supported :(fas fa-share-square fa-fw): Up to 24 share sites supported :(far fa-comment fa-fw): Disqus comment system supported by Disqus :(far fa-comment-dots fa-fw): Gitalk comment system supported by Gitalk :(far fa-comment-alt fa-fw): Valine comment system supported by Valine :(far fa-comments fa-fw): Facebook comments system supported by Facebook :(fas fa-comment fa-fw): Telegram comments system supported by Comments :(fas fa-comment-dots fa-fw): Commento comment system supported by Commento :(fas fa-comment-alt fa-fw): utterances comment system supported by utterances :(fas fa-comments fa-fw): giscus comment system supported by giscus ","date":"2019-08-02","objectID":"/about/:1:3","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Extended Features :(fas fa-search fa-fw): Search supported by Lunr.js or algolia :(far fa-grin-tongue-wink fa-fw): Twemoji supported :(fas fa-code fa-fw): Automatically highlighting code :(far fa-copy fa-fw): Copy code to clipboard with one click :(far fa-images fa-fw): Images gallery supported by lightGallery :(fab fa-font-awesome fa-fw): Extended Markdown syntax for Font Awesome icons :(fas fa-superscript fa-fw): Extended Markdown syntax for ruby annotation :(fas fa-percentage fa-fw): Extended Markdown syntax for fraction :(fas fa-square-root-alt fa-fw): Mathematical formula supported by $\\KaTeX$ :(fas fa-project-diagram fa-fw): Diagrams shortcode supported by mermaid :(fas fa-chart-pie fa-fw): Interactive data visualization shortcode supported by ECharts :(fas fa-map-marked-alt fa-fw): Mapbox shortcode supported by Mapbox GL JS :(fas fa-music fa-fw): Music player shortcode supported by APlayer and MetingJS :(fab fa-bilibili fa-fw): Bilibili player shortcode :(fas fa-note-sticky fa-fw): Kinds of admonitions shortcode :(fab fa-css3 fa-fw): Custom style shortcode :(fab fa-js-square fa-fw): Custom script shortcode :(fas fa-i-cursor fa-fw): Animated typing supported by TypeIt :(fas fa-cookie-bite fa-fw): Cookie consent banner supported by cookieconsent :(far fa-user-circle fa-fw): Person shortcode … ","date":"2019-08-02","objectID":"/about/:1:4","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"License LoveIt is licensed under the MIT license. Check the LICENSE file for details. ","date":"2019-08-02","objectID":"/about/:2:0","tags":null,"title":"About LoveIt","uri":"/about/"},{"categories":null,"content":"Special Thanks Thanks to the authors of following resources included in the theme: normalize.css Font Awesome Simple Icons Animate.css autocomplete Lunr.js algoliasearch lazysizes object-fit-images Twemoji emoji-data lightGallery clipboard.js Sharer.js TypeIt $\\KaTeX$ mermaid ECharts Mapbox GL JS APlayer MetingJS Gitalk Valine cookieconsent ","date":"2019-08-02","objectID":"/about/:3:0","tags":null,"title":"About LoveIt","uri":"/about/"}]