[{"categories":["悟道"],"content":"平庸与卓越之间的差别，不在于天赋，而在于长期的坚持、持续的投入。 本文编辑整理自清华大学陈吉宁校长履新环保部前，于2015年1月27日清华大学第一次研究生毕业典礼暨学位授予仪式上的演讲。 亲爱的同学们： 今天，共有1318名同学获得博士、硕士学位。首先，我代表学校，向同学们奋力拼搏完成学业表示祝贺！同时，向悉心指导你们的老师、辛勤培育你们的家人和一路支持你们的亲友，致以诚挚的敬意和衷心的感谢！ 最近我一直在思考，在今天这个场合，给大家讲点什么。大家知道，在过去几次毕业典礼上，我曾经讲过理想、担当、良知、敬畏等一些关于价值信念的话题，勉励同学们在实现自我价值和履行家庭责任的同时，肩负起推动国家富强、民族复兴、人类文明进步的时代重任。这既是对同学们提出的一些做人做事方面的希望，也是我自己经历中的一些感悟和体会。今天，我想和大家交流的话题是：选择与坚持。前不久，我在台湾访问的时候见到一本书，书名叫《Outliers》，书的内容与去年全校教育工作讨论会的主题很吻合，我就买了下来，在回北京的路上很快读完了。书中讲了很多故事来说明社会环境、机遇对一个人成功的重要作用。不过，我从这些故事中得到了一些新的不同的感受和启示，在此与大家分享。 第一是从现在做起，从小事做起，不要怨天尤人。 这本书讲到加拿大冰球国家队的故事，作者发现在这些国家队选手中有一个规律性现象——他们大部分人都出生在1、2月份，很少有在年底出生的。之所以出现这种现象，是因为在加拿大这个冰球运动狂热的国家，教练们会挑选9到10岁的小选手组成“巡回赛小组”，而分组的时间界线恰好是1月1日，换句话说，1月1日到当年12月31日之间出生的球员会被分在一组。对10来岁的孩子来说，几个月的年龄差距还是很明显的，那些大月份出生的小孩发育更成熟，更容易在同组竞争中胜出。而一个小选手一旦被选中，他将拥有更好的教练、更出色的队友、参加更多的比赛。久而久之，这些孩子的成绩会越来越好，其中最优秀的一部分人就进入到国家队。大月份出生的运动员从一开始幸运地获得了那些微小的机会，并通过努力逐渐把这些机会累积成自己的优势，最终成为国家队选手。这个规律不仅存在于加拿大冰球运动中，在美国的棒球运动、欧洲的足球运动甚至在学校教育中也有类似现象。 这告诉我们，每件事情的起步阶段都很重要，不要因为事情小就忽视它，不要因为是刚开始就不认真去做。同学们，你们离开学校后，身边的每一件小事都可能是积累未来发展优势的那个机会。希望大家迈好这走向社会的第一步，从小事做起，从现在做起，从身边的一点一滴做起，把自己的成长融入到国家发展、社会进步的洪流中，即使遇到了困难和挫折，也决不要消极悲观、怨天尤人。这是我想说的第一点体会。 第二是要长期坚持，全心投入，不要轻易放弃。 大家在学校时有不少观看高水平演出的机会。当我们陶醉于婉转悠扬的乐曲时，经常会赞叹演奏者的高超技巧，并可能会将此归功于他们的非凡天赋。《Outliers》这本书却讲了另外一个发现：无论是小提琴还是钢琴专业的学生，他们从5岁左右开始学琴，到20岁时，那些具有成为世界级独奏家潜质的学生都至少练习了10000小时，那些被认为比较优秀的学生累计练习了8000小时，而那些被认为将来只能成为一名音乐辅导老师的学生只练习了4000小时。这就是所谓的“10000小时法则”，如果一个人的技能要达到世界水准，他（她）的练习时间通常需要超过10000小时。这个法则也应验在我们熟知的很多著名人士身上。比如，比尔.盖茨就几乎把自己的青少年时光都用在了计算机程序开发上。从1968年他上七年级开始，到大二退学创办微软公司，这期间盖茨持续编程有7年时间，远远超过10000小时，据说当时世界上有盖茨这样经历的人不超过50个。因此，当1975年个人计算机开始进入家庭时代的黎明时刻，能占据最有利的位置去拥抱第一缕曙光的人，自然非“盖茨”们莫属。前不久，Facebook创始人扎克伯格来清华演讲，我问了他一个问题——对于创业者来说，什么最重要？他不假思索地回答，“不要放弃”。我们的古人也说，行百里者半九十。做一件事情，只有持之以恒地坚持下去，你才能从中产生对事物的深刻理解和认识，获得与众不同的感悟和洞察，这是一个人成长不可或缺的重要过程。没有这样的积累，即便机会到了你的面前，也很难能把握住。所以，平庸与卓越之间的差别，不在于天赋，而在于长期的坚持、持续的投入。这是我想告诉大家的第二点体会。 我要说的第三点是，要懂得取舍，有所不为，不要被眼前利益所诱惑。 去年下半年，苹果公司首席执行官蒂姆.库克在清华有一个对话活动。当被问到“在过去3年中哪些是你做的最困难的决策”时，库克回答说，最难的是“决定不做什么”。因为苹果公司有太多伟大的、令人兴奋的想法。他又被问到，是不是要从好的想法中选择最好的想法，去掉次好的想法？令人惊讶的是，库克说，我们所有的想法都是最好的想法，但苹果公司只能选择其中一种，并努力把它做到极致，其他的都会果断放弃。同学们，人的成长就是一个不断选择的过程，对优秀的人而言，选择更是人生中面临的最大挑战。今天你们走向社会，将面临各种各样的机遇、诱惑，也会遇到很多的挑战、挫折。每当这时候，你都是在回答与“选择”相关的问题。我希望大家，无论面对机会还是挑战，都能有舍弃的胸怀和勇气，都能从国家利益出发、从大众福祉出发，选择最有价值的事情，专心专注地做下去，在服务国家、奉献社会的事业中让自己从优秀走向更加优秀。 同学们，刚才我讲的是自己从很多人、很多事中得到的三点感悟。当然，即使大家做到了这三点，也未必一定能获得你所期望的结果。但我相信，只要做到了从小事做起，从现在做起，持之以恒，勇于舍弃，你们会从自己的每一次经历中收获对成功与失败更为深刻的理解。那时候，世界依然属于你，创造精彩人生的空间依然为你敞开。正如敬爱的朱镕基学长在纪念经管学院建院30周年时，对清华同学们讲的那样，“要大胆地试，不要怕失败；你们还年轻，失败了也无所谓”。 来源：《新华日报》2015年2月4日 ","date":"2023-02-05","objectID":"/%E5%B9%B3%E5%87%A1%E4%B8%8E%E5%BA%B8%E4%BF%97%E7%9A%84%E5%B7%AE%E8%B7%9D%E4%B8%8D%E5%9C%A8%E5%A4%A9%E8%B5%8B/:0:0","tags":["可持续发展","坚持","试错"],"title":"平庸与卓越之间的差别不在于天赋","uri":"/%E5%B9%B3%E5%87%A1%E4%B8%8E%E5%BA%B8%E4%BF%97%E7%9A%84%E5%B7%AE%E8%B7%9D%E4%B8%8D%E5%9C%A8%E5%A4%A9%E8%B5%8B/"},{"categories":["悟道"],"content":"文章转载自微信公众号“红与绿” -红与绿，让投资多姿多彩- 红与绿导读： 人生终归会经历起起落落，但真正的高手，无论外部环境优劣，无论自身运气好坏，总是能持之以恒的遵循计划：稳扎稳打，步步为营，日积跬步，以致千里。具体的成功路径或许无法复刻，但真正的高手身上总有一些共性，这正是我们复盘历史、学习他人的意义。今天的文章通过重新解读几个经典的故事，拆解高手成功的战略秘籍，希望能带给你思考与能量。 ","date":"2023-02-04","objectID":"/continue/:0:0","tags":["可持续性","发展"],"title":"真正的高手，在于稳定性与可持续性","uri":"/continue/"},{"categories":["悟道"],"content":"01 日拱一卒，功不唐捐 这是一个发生在一百年前的故事。 截止到1911年12月，没有哪个地球人到达过南极点，所以这是一百年前所有最伟大的探险者、所有最有探险精神及梦想的人最想做到的事情。 最后是两个竞争团队打算完成这项创举，一个是来自挪威的阿蒙森团队，另一个是英国的斯科特团队，他们都想率先完成这个从来没有人完成过的事情，到达南极点。 他们出发时间是差不多的，这是因为这个世界上的竞争从来都是非常激烈的，当有一个大的机会出现时，没有可能只有你一个人看到了，而是差不多时候有一帮人看到了。这跟其他无数场合的竞争都很像。 所以这两支团队差不多都是1911年10月在南极圈的外围做好了准备，准备进行最后的冲刺。 结果是这样的，阿蒙森团队在两个多月后，也就是1911年12月15日，率先到达了南极点，插上了挪威国旗。 而斯科特团队虽然出发时间差不多，可是他们晚到了很多，他们晚到了一个多月，这意味着什么？ 这就是成功跟失败的区别： 阿蒙森团队作为人类历史上第一个到达南极点的团队会永载史册，获得一切的荣誉； 而斯科特团队他们虽然经历了一样的艰难险阻，但是晚了一个多月。 没有人会记住第二名，大家只知道第一名。 探险家阿蒙森在南极点的挪威国旗之下 这个故事并没有这么简单，你不光要到南极点，你还要活着回去。 阿蒙森团队率先到达南极点之后，他们又顺利地返回了原来的基地； 而斯科特团队晚到了，他们没有获得荣誉。而且更糟糕的是，他们因为晚了，回去的路上天气非常差，路上不断地有人掉队，最后他们没有任何一个人生还。 斯科特团队不但没有完成首先到达南极点的目标，而且全军覆没，这已经是生与死的区别了。 那么是什么造成这么重大的区别，不光是成功与失败的区别，而且是生与死的区别？对这个事情进行研究，可能对我们做事会有些帮助和启发。 首先，去南极探险，不光是需要人，还需要物资，事后有人总结分析两个队的策略和两个队的准备，可以看到非常重要的区别。 阿蒙森团队物资准备非常非常充分，他们是三吨的物资。而斯科特团队准备的东西少，他们只有一吨的物资。 一吨的物资够吗？如果你在过程中不犯任何错，完全不犯任何错的话，刚好够。 这是多么可怕的事情，理论上可行，但现实中碰到很大的压力、碰到很大的未知困难，你不可避免地会动作走形，会犯很多错。所以，当你的计划定得太紧的时候，其实是非常非常危险的。 而阿蒙森团队做得非常好，他们准备了三吨的物资，这些物资有极大的富余量。他们充分预知到环境的困难，做好充足的准备，给自己留下了犯错的空间。 事实上，他们碰到的环境是差不多的，最后两个团队却有截然不同的结果，这个是非常值得研究的。 阿蒙森团队的成功经验，最后可以总结成一句话：不管天气好坏，坚持每天前进大概30公里。 在一个极限环境里面，你要做到最好，但更重要的是，你要做到可持续的最好。 相反，斯科特团队从他们的日志来看，是一个比较随心所欲的团队，天气很好就走得非常猛，可能四五十公里甚至六十公里。 但天气不好的时候，他们就睡在帐篷里，吃点东西，诅咒恶劣的天气，诅咒运气不好，希望尽快天转晴，尽快能够前进。 事后总结，这两种做法很可能是他们最大的区别。不管环境好坏，不管容易与否，坚持每天前进三十公里；不管是到达南极点还是从南极点顺利返回。这是一个非常重要的区别。 阿蒙森团队于1912年1月25日全部返回营地。这个日子和他3年前计划的归程一天不差，是巧合也是奇迹。 后来有人评价阿蒙森的成功是因为好运，他的回答是： “最重要的因素是探险的准备如何，你必须要预见可能出现的困难，遇到了该如何处理或者如何避免。 成功等待那些井井有条的人——人们管这个叫做好运气。对于那些不能预见困难并做出及时应对的人来说，失败是难以避免的——人们称这个为坏运气。” 这个故事还有一些细节也值得我们思考： 斯科特团队用的是矮种马来拉雪橇，而阿蒙森团队用的是爱斯基摩犬。阿蒙森团队足足准备了97条爱斯基摩犬，阿蒙森认为只有爱斯基摩犬才是南极冰天雪地中的最佳选择。相比而言，马更强壮，开始的时候走得更快，但马不够耐寒，走到半路都冻死了，最后只能靠人力来拉雪橇；爱斯基摩犬虽然走得慢，但能在很冷的条件下生存，从而保证了行进速度。 阿蒙森为了极地探险，曾经和爱斯基摩人生活了一年多时间，就为了跟他们学习如何在冰天雪地里生活、求生等。 阿蒙森的计划非常周详，连午餐也作了特别的安排。 他使用了一种新设计的保温瓶，在每天启程前早餐时，便把热饭菜装在保温瓶里。这样午餐可以在任何时间吃，既节约燃料，又省时间。 而由于需要扎营生火，斯科特团队吃顿午餐要多花1个小时。 阿蒙森的队员时常坐在雪橇上，一边欣赏极地的奇异风光，一边嚼着暖瓶里的热饭，而且还有休假：星期天哪怕再适于行路，阿蒙森也不改变习惯。 ","date":"2023-02-04","objectID":"/continue/:1:0","tags":["可持续性","发展"],"title":"真正的高手，在于稳定性与可持续性","uri":"/continue/"},{"categories":["悟道"],"content":"02 通盘无妙手 “通盘无妙手”是一个下棋的术语，原话叫做“善弈者通盘无妙手”——也就是说很会下棋的人，往往一整盘棋你是看不到那种神奇的一招，或者力挽狂澜的一手的。 这有点违反我们的直觉，为什么是这样呢？ 1.下棋的“通盘无妙手” 韩国有一位围棋选手叫李昌镐，是围棋界的世界级顶尖高手，下围棋的人都知道他。 李昌镐16岁就夺得了世界冠军，被认为是当代仅次于吴清源的棋手，巅峰时期横扫中日韩三国棋手，号称 “石佛”，是围棋界一等一的高手。 李昌镐下棋最大的特点，也是最让对手头疼的手法，就是从不追求“妙手”，而是每手棋，只求51%的胜率，俗称“半目胜”。 通常，一局棋下来，总共也就200-300手，即使每手棋只有一半多一点的胜率，最多只要一百多手，就能稳操胜券。也就是说，只要每一步比对手好一点点，就足够赢了。 李昌镐曾对记者说： “我从不追求妙手，也没想过要一举击溃对手。” 世界排名第一的棋手，居然只追求51%的胜率，让很多记者和业内人士都觉得不可思议。 这恰恰是高手的战略，所谓的“妙手”，虽然看起来很酷，赢得很漂亮，但存在一个问题——给对方致命一击的同时，往往也会暴露自己的缺陷。正所谓“大胜之后，必有大败；大明之后，必有大暗”。 而且，“妙手”存在不稳定和不可持续性，无法通过刻意练习来形成技能上的积累，一旦“灵感”枯竭，难免手足无措。正如守卫一座城池，只靠“奇兵”是不行的，终归要有深沟、高垒的防护。 而与之相比，“通盘无妙手”看似平淡无奇，但是积胜势于点滴、化危机于无形，最终取得胜利是稳稳当当的，体现的是不同于“妙手”的另一种智慧。 真正的高手是不太会去做这些看起来风光无限的事情，因为他们懂得“善弈者通盘无妙手”。那些看起来很风光的事情，其实风险很大，失误率高，一次失误后果就很严重。 巴菲特的合作伙伴芒格说，如果我知道自己会死在哪儿，那我一辈子不去那里就好了。 这类人他们站在全局的高度来看问题，提前防范危险，消除隐患，把威胁化解于无形。 2. 台球的“通盘无妙手” 如果你打过或看过斯诺克台球比赛应该知道，它是这样的一项运动： 台子上有各种不同颜色的球，代表不同的分数，两个人按照规则轮流击球。而且只要球进了，就可以一直打，直到自己打丢了一颗球，就换对方上场击球，最后看谁得的分数多。 所以，斯诺克台球比赛非常重要的就是保持自己击球的连续性。 在打球的时候，球手一定要对整盘球的形势有整体的分析和规划，并且每一杆击球都要为下一杆做好铺垫，这样才能打得比较顺，否则就是自己给自己制造麻烦。 于是纵观斯诺克的历史，有两类球手是非常顶尖，经常拿下大赛冠军的： 1）球手天赋极佳，击球特别准，即使对别人来说难度很高的球他也能打进。虽然整体控制局势的能力稍差，可能在局面上给自己“挖坑”，但由于自己总能超水平发挥，打得别人没办法，所以也能夺得冠军。 2）球手对局面的掌控非常完美，每一杆每一次计算都非常到位，给后面留了很多的余地和铺垫。看这种人打球你会发现他很少有那种难度很大，非常精彩的击球，但他经常不知不觉、波澜不惊地就赢下了比赛。这样的球手也能获得大赛的冠军。 不过，这两类顶尖选手有一个最大的区别——后一类球手职业生涯的长度往往比前一类要长得多。 而前一种天赋型的选手，往往会在巅峰期的几年里非常耀眼，但下滑也会很快，过了一阵就会淡出公众的视野了。 3. 守门员的“通盘无妙手” 大家都知道，在足球场上，守门员是个非常重要的位置。 但外行看守门员的水平，往往会在意那些特别精彩的扑救，比如飞身一跃把一脚势大力沉的射门扑出去，这确实非常精彩；但是懂业务的人评价一个守门员，其实是看他是否能把问题化于无形。 比如历史上一些伟大的足球守门员，其实都是后防线的指挥家。他会观察对手的进攻路线和模式，然后帮助整条后卫线做好整体规划，把很多问题消解在无形中。 所以，你在场上不会看到他们经常有超水平发挥的精彩扑救，主要是因为他们早就杜绝了隐患，把对方有威胁的射门化解在了无形中。 这才是一个足球守门员的高境界。 4. 医者的“通盘无妙手” 中国有句古话：“善战者无赫赫之功，善医者无煌煌之名。”这两句意思是说：善于打仗的人往往没有什么显赫的功绩，而好的医生没有很大的名声。 扁鹊是春秋战国时的名医，他有两个哥哥，三兄弟都精通医术。 魏文王曾问扁鹊： “你们家兄弟三人都精于医术，谁的医术是最好的呢？” 扁鹊回答： “大哥最好，二哥差些，我是三人中最差的一个。” 魏王不解地说： “但是你的名气却是最大的啊。” 扁鹊解释说： “大哥治病，是在病情发作之前，那时候病人自己还不觉得有病，但大哥就下药铲除了病根，使他的医术难以被人认可，所以没有名气，只是在我们家中被推崇备至。 我的二哥治病，是在病初起之时，症状尚不十分明显，病人也没有觉得痛苦，二哥就能药到病除，使乡里人都认为二哥只是治小病很灵。 我治病，都是在病情十分严重之时，病人痛苦万分，病人家属心急如焚。 此时，他们看到我在经脉上穿刺，用针放血，或在患处敷以毒药以毒攻毒，或动大手术直指病灶，使重病人病情得到缓解或很快治愈，所以我名闻天下。” 魏王大悟。 ","date":"2023-02-04","objectID":"/continue/:2:0","tags":["可持续性","发展"],"title":"真正的高手，在于稳定性与可持续性","uri":"/continue/"},{"categories":["悟道"],"content":"03 结硬寨，打呆仗 清朝末年，太平天国起义，太平军战斗力极强，大清国20万八旗兵和60万绿营兵在其面前都不堪一击，可最终却毁在了曾国藩率领的湘军手里，这是怎么回事呢？ 曾国藩一生可以分为三个阶段： 第一阶段是文人生涯，从6岁读书到27岁中进士，一直做到大学士，是当时的学术领袖； 第二阶段是军人生涯，太平天国运动中，自己组建湘军，缠斗13年，愣是把悬崖边上的大清王朝拉了回来续了命； 第三阶段是引入西方科学文化。他组织建造了中国第一艘轮船，建立了第一所兵工学堂，引入第一批西方书籍，送出去第一批留美学生。 前后两阶段都是文人的事，但一介书生怎么战胜当时战斗力爆裂的太平军呢，这是个有趣的战略研究。 不了解情况的一定以为曾国藩是一个熟读兵法、足智多谋的战略家，其实恰恰相反。 在他带领湘军之前，并没有多少带兵打仗的经验，也不懂什么用兵之道。之所以能赢，其实就六个字——结硬寨，打呆仗。 曾国藩从来不与敌军硬碰硬地短兵相接，即使在胜算很大的情况下也从不主动发动攻击，而是每到一个地方就在城外扎营，然后挖战壕、筑高墙，把进攻变成防守，先让自己处于不败之地。 太平军是非常骁勇善战的，总想跟湘军野战，而湘军就是守着阵地不动，就算太平军再能打，碰到这种路数，也是毫无办法。只要一有时间，湘军就开始不停地挖沟，一道又一道，直到让这个城市水泄不通、断草断粮，等到城里弹尽粮绝之后，再轻松克之。 就这样，一座城接着一座城，一点一点地挖沟，一步步地往前拱，就把太平天国给拱没了。湘军每打一个城市，都不是用一天两天，而是用一年两年，大部分的时间都在挖壕沟。 当时的湘军看起来更像是一个施工队，被湘军攻打过的城市，如安庆、九江等，城外的地貌都被当年所挖的壕沟改变了。 湘军与太平军纠斗13年，除了攻武昌等少数几次有超过3000人的伤亡，其他时候，几乎都是以极小的伤亡，获得战争胜利。 这就靠曾国藩六字战法：结硬寨，打呆仗。 《孙子兵法》中说：“先为不可胜，以待敌之可胜。” 所谓 “结硬寨，打呆仗”，简而言之，就是先占据不败之地，然后慢慢获得细小优势。 曾国藩是一个爱用“笨”方法的人，他不喜欢取巧的东西，也不相信什么四两拨千斤的事情。因为胜利果实从来不是强攻出来的，而是它熟透了，自己掉下来的。《孙子兵法》里说：“胜可知，而不可为。” 美团王兴在接受采访时对记者说： “多数人对战争的理解是错的，战争不是由拼搏和牺牲组成的，而是由忍耐和煎熬组成的。” 无论是战争、商业还是个人层面，道理都一样，要想走出困境或者取得胜利，靠的都是耐心，而不是某个突发性的、奇迹般的胜利。 很多时候，你只需要按部就班地做好自己该做的事，等时机来临时，一切都会有所改变，只是在那之前，你必须要有足够的耐心。 ","date":"2023-02-04","objectID":"/continue/:3:0","tags":["可持续性","发展"],"title":"真正的高手，在于稳定性与可持续性","uri":"/continue/"},{"categories":["悟道"],"content":"04 结 语 最后，我希望能和你一起，记住这些精彩的故事，汲取前人留给我们的经验教训： 无论外界环境优劣、不管运气好坏，都不怨天尤人。按照自己的计划，稳扎稳打，步步为营，每天进步一点，到来年这个时候再回头来看，你就会发现，你已经走出了很远的距离。 林肯有句话说得好：我走得慢，但我绝不退后。 ","date":"2023-02-04","objectID":"/continue/:4:0","tags":["可持续性","发展"],"title":"真正的高手，在于稳定性与可持续性","uri":"/continue/"},{"categories":["essay"],"content":" 对于我来说，生活的盼头，就是在获得立身之本的智慧的同时，去追寻自己所热爱的东西，不断发掘这个世界的多元性并与之建立联系。 比如我喜欢新西兰民谣、风光摄影和cg作品，在课业之余我就会给自己一段时间去享受，长短不重要，重要的是那种纯粹的、无目的性的感觉。 某些机缘巧合下我发现花花的歌、人像摄影、还有国风水墨画也挺不错，那么我就会觉得：欸，这些领域我也可以挖掘一下。 我认为这个就是追寻热爱、发掘多元性的过程，它带给我纯粹的快乐。 我们可以有这样的想法，但常常会迷失，包括我自己。 而迷失的诱因主要有两点：成长环境、心理环境。 这两点如果讲深了感觉可以写篇专业论文哈哈，不过经历过的应该懂的都懂，我就直接给出我的处理方式。 而对一个人成长环境影响最大的就是家庭，人生不像是打游戏，不会从”请选择你的英雄“开始。我们不能保证我们的家庭质量，但是我们可以选择自己的活法，将人生的控制权掌控在自己的手里。最差的情况，如果感觉周围没有人能理解你，例如父母的不支持抑或是伤害、朋友的不理解。那就不妨孤身一人，过滤掉外界的噪声。当然这里不是建议大家一直寡着，而是需要有一种把自己交给自己的能力，如果有一对能无时无刻支持自己的父母，或是能找到一两个知己，那都是再好不过的。 然后是心理环境，迷失主要源于不断的自我怀疑。很多时候我们自以为可以被称为烦恼的东西其实都不是烦恼，在时间的长河里甚至连浪花都算不上。不妨想一想，你有多少次烦恼源于自我否定。例如，我认为自己没有好听的声音，所以不能上台唱歌；或是我认为自己没有足够的实力，所以无法参加比赛等等。能不能自由的表演只有在你尝试了才知道，所以，如果真心想做，大胆去做、不断练习就可以了，没有那么多犹豫与烦恼，只有决心的有无。 安身立命、强大内心、追逐热爱，永远闪闪发光。 祝愿看到这篇随笔的各位都能找寻到自己想要的生活。 希望对最近情绪状态不好的uu们能有所帮助。 ","date":"2022-10-30","objectID":"/%E7%9B%BC%E5%A4%B4/:0:0","tags":["迷失","盼头"],"title":"sunrise","uri":"/%E7%9B%BC%E5%A4%B4/"},{"categories":[],"content":"1. 本地配置 ","date":"2022-09-13","objectID":"/blogstory/:1:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"1.1 git相关资源下载 下载git 安装相关包管理器，例如npm和yum，包管理器中含有某些博客主题需要的依赖 设置git账号：global、local ","date":"2022-09-13","objectID":"/blogstory/:1:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"1.2 hugo下载 上官方网站进行下载，详情请见hugo release，注意下载hugo-extended版，适配性更强。 下载完毕后，将文件路径/bin加入环境变量，重启电脑，打开命令行输入命令hugo version，若产生hugo版本号则证明安装完成。 ","date":"2022-09-13","objectID":"/blogstory/:1:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"1.3 博客的配置 主流的个人博客搭建引擎包括hexo和hugo，这两个文件的主要差别在于主题配置的读取上，hexo博客根目录下的config.yaml文件比theme主题内置的config.yaml文件优先级更低，如果在根目录配置下指明了主题文件信息，那么引擎就会优先渲染后者；hugo与此相反，更侧重于主题文件的更新维护，所以一般需要将主题文件的配置拷贝到根目录下。具体的差异可以参考hexo与hugo的异同。 我的博客用的是hugo-lovelt主题，主题配置参考lovelt官方文档即可，根目录主题配置记得参照主题文档examplesite下的.conf文件。 在博客的主题的选择上，我踩了很多坑，一些主题文档的维护相当不好。在选择一款喜欢的主题时，一定要关注官方文档的质量哦。 ","date":"2022-09-13","objectID":"/blogstory/:1:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2. 云服务器配置 ","date":"2022-09-13","objectID":"/blogstory/:2:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2.1 云主机购买与配置 云主机的选择：阿里云、腾讯云、华为云，这三款是主流。 关于云主机的购买，具体可参考acwing-linux相关课程： 云服务器的购买 云主机的配置： 我购买的是腾讯云的轻量级服务器，系统为linux下的ubuntu。在系统分配好云主机后，我们的初始化登录是一个叫ubuntu的账户。与一般的云服务器不同，腾讯云初始化没有root用户，但ubuntu拥有sudo权限。注意sudo权限与root权限有一定差异。具体的差异详见sudo与root。 然后我们可以进行的一些操作： 2.1.1 创建acs用户 建立： # ubuntu根目录~下 adduser acs # 创建用户acs usermod -aG sudo acs # 给用户acs分配sudo权限 查看是否成功： 注意当我们cd acs或ubuntu时会进入到它们的根目录，但这个电脑下的系统设置文件在/下，也就是说，我们需要cd /才能看到到这台主机下的所有配置文件。同时，我们之后下载的很多文件都会被保存在/etc中。 2.1.2 安装tmux和docker tmux安装教程 sudo apt-get update # linux从服务器获取软件更新情况 sudo apt-get install tmux 在安装完成后，可以通过scp将一些tmux配置文件上传至云端，启用tmux，然后在命令行进行些许配置即可完成对tmux的美化。 tmux # ctrl + b : 进入tmux命令行模式 source-file ~/.tmux.conf # 让tmux配置生效 docker安装教程 在用户（有sudo权限，比如ubuntu）根目录下，按照docker-ubuntu 安装说明中的\"Install using the repository\"进行安装即可，注意一条条cv执行命令。 ","date":"2022-09-13","objectID":"/blogstory/:2:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2.2 域名的购买与ssl证书申请 购买方面，挑选自己喜欢的域名进行购买即可。 在购买完域名后，需要经过实名验证、域名审核等流程。 之后可以申请ssl安全证书，一切按照腾讯云指引操作即可。 在申请完成后，可以对证书进行下载，会得到五个文件，我们只需要将其中的密钥对文件进行移动就行，后缀分别为.crt和.key，目标位置为/etc/nginx 为了网站长期的运行，我们需要对域名进行备案，这是国内的法律要求。 ","date":"2022-09-13","objectID":"/blogstory/:2:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"2.3 nginx的下载与配置 2.3.1 nginx下载与基础配置 下载方面，可以参照ubuntu安装nginx，内容非常详细，特别注意不同文件的安装位置，由于root用户初始化一般不存在，所以在安装时应该在sudo权限用户下使用sudo apt-get install nginx进行安装。 在安装完成后，我们进行一些基础设置： # 设置开机启动nginx sudo systemctl enable nginx # 启动nginx sudo systemctl start nginx # 查看是否启动nginx sudo systemctl status nginx # 逐行执行 在浏览器搜索框输入服务器公网ip地址，如果会出现nginx的页面，说明可以导航到服务器，即nginx安装成功。为了使外部用户可以访问web服务器，需要开放防火墙，主要是80端口和443端口，可以在服务器的控制台手动设置，同时也可以命令行设置： sudo firewall-cmd --permanent --zone=public --add-service=http sudo firewall-cmd --permanent --zone=public --add-service=https sudo firewall-cmd --reload 2.3.2 nginx高级配置 仿照hugo-txcloud-nginx中的nginx.conf进行配置即可。 ","date":"2022-09-13","objectID":"/blogstory/:2:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3. 建立本地与云端的联系 ","date":"2022-09-13","objectID":"/blogstory/:3:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3.1 初步连接 使用ssh工具进行远程访问 ssh username@server_ip 交互窗口会提醒你输入密码 ","date":"2022-09-13","objectID":"/blogstory/:3:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3.2 配置免密登录 在完成过远程访问后，就可以配置免密登录。 在本地进入 ~/.ssh ssh-keygen -t rsa 生成密钥，按照指引为密钥添加文件名 密钥生成教程可访问 https://blog.csdn.net/qq_40932679/article/details/117487540 然后按照下述命令将公钥添加到远程服务器，最终会被添加在.ssh中的authorized_key文件内 ssh-agent bash # 启动ssh高速缓存 ssh-add -i ~/.ssh/txcloud.pub username@server_ip # 将公钥添加到目标用户端下 关于ssh-agent可以参考 https://blog.csdn.net/weixin_43972437/article/details/114578337 接着，在.ssh/查看有无config文件，若没有就新建一个 打开config文件，按照如下格式进行配置 # 腾讯云 Host server1 HostName 43.143.88.173 User acs IdentityFile ~/.ssh/txcloud Host server0 HostName 43.143.88.173 User ubuntu IdentityFile ~/.ssh/txcloud 这样我们的免密登录就配置好了，注意到，对不同用户要进行分别配置，但它们所使用的公密钥可以相同。 ","date":"2022-09-13","objectID":"/blogstory/:3:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"3.3 使用winscp与云端进行图形化文件交互 winscp下载 如果连接用户并非root用户，参考winscp修复远程连接进行修改 ","date":"2022-09-13","objectID":"/blogstory/:3:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4. 建立本地与github的联系 ","date":"2022-09-13","objectID":"/blogstory/:4:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4.1 git账号管理 使用邮箱注册github账号，并登录 在本地使用命令ssh-keygen -t rsa -C \"username@server_ip\"生成注释 为“username@server_ip”的密钥对，在生成的过程中可以为密钥对命名。然后将公钥.pub文件的内容进行复制，在github用户setting下的SSH and GPG keys模块新建ssh key，key name任意取，将公钥内容添加到下方加密区，完成添加。 回到本地， 如果git存在多账号，那么需要按如下方式进行管理，打开config文件: # github user Host X Hostname github.com User BreezEcho PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_x # github user Host Y Hostname github.com User huansong-dev PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa_y 关于git多账号配置详情请见 https://www.cnblogs.com/wanan-happy/p/14588504.html 然后将私钥加入ssh-agent进行管理：ssh-add id_rsa_x 、ssh-add id_rsa_y 在配置完成后，可以使用ssh -T git@X来检验是否完成了连接 为了使用便利，我们可以将常用的账号设置为全局账号 git config --global user.name username git config --global user.email useremail 如果在某个仓库需要使用特殊账号，可以进行如下操作 cd base # 进入该仓库 git config --local user.name username git config --local user.email useremail ","date":"2022-09-13","objectID":"/blogstory/:4:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4.2 建立本地仓库与远程仓库的联系 远程新建名为为user_id.src的私人仓库，用于管理博客项目 本地新建仓库hblog，如果是hugo site，执行hugo new site hblog 在设置好仓库账号后，进入hblog，并按照如下操作进行关联 git init # 初始化为git本地仓库 git remote -v # 查看关联情况 git remote add origin git@X:username/username.github.io.git # 建立联系 ","date":"2022-09-13","objectID":"/blogstory/:4:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"4.3 博客项目文件推送 # 进入博客根目录 touch .nojekyll # 默认不使用github pages自带的jekyll主题，空文件 git add . # 为所有文件添加追踪，之后的一切变化都可以通过git status进行查看 git commit -m \"ud\" # 将追踪文件的变化上传到本地仓库 git push -u origin master # 首次推送信息，之后可以将-u省去 之后如果远程仓库有变化，需要先git pull origin master，可能会出现git merge提醒，这个时候允许合并，然后再执行上述步骤。 ","date":"2022-09-13","objectID":"/blogstory/:4:3","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"5. 使用github actions将博客展示文件部署到github pages与云端服务器 主要参考： hugo双端部署，给我最大灵感的文章。 hugo+github action 少数派 ","date":"2022-09-13","objectID":"/blogstory/:5:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"5.1 github actions + public -\u003e github pages 5.1.1 赋予项目仓库访问本账号下其它仓库的特权 新建名为user_id.github.io的公共仓库，注意user_id为你的用户名，这样的名称格式相对固定。这个仓库用来展示我们的博客内容。 进入github用户界面的setting下: 选择右上角新建个人密钥，选中repo和workflow，然后点击生成。注意密钥只会出现一次，记得复制。将这里得到的密钥添加到我们项目仓库的actions secrets，并命名为PERSONAL_TOKEN 5.1.2 建立github actions工作流 首先，我们将项目仓库的默认分支改为master(setting中)，然后进入项目actions模块，新建工作流文件gh-pages.yml，配置参考如下，可按需求进行修改： name: deploy on: push: workflow_dispatch: schedule: # Runs everyday at 8:00 AM - cron: \"0 0 * * *\" jobs: build: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \"latest\" - name: Build Web run: hugo - name: Deploy Web uses: peaceiris/actions-gh-pages@v3 with: PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }} EXTERNAL_REPOSITORY: pseudoyu/pseudoyu.github.io PUBLISH_BRANCH: master PUBLISH_DIR: ./public commit_message: ${{ github.event.head_commit.message }} 然后等待一段时间，就可以看到工作流正常，进入博客展示仓库，可以发现多了一个master分支。 一段时间后，访问站点user_id.github.io就可以看到博客内容啦。 ","date":"2022-09-13","objectID":"/blogstory/:5:1","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"5.2 github actions + public -\u003e txcloud 5.2.1 给予项目仓库访问云服务器的特权 与本地密钥访问云服务器类似，我们需要先得到一个密钥对，然后分别将公钥和密钥置入服务端与用户端。 在本地ssh-keygen -t rsa 创建密钥对，参考上述步骤将公钥放入云端用户的authorized_key中，将私钥放入项目仓库的actions secrets内。 这个操作告诉我们密钥在哪里产生不重要，重要的是公钥与私钥的位置，就像锁与匙。 5.2.2 维护文件权限 在云主机相应用户目录下新建public空文件夹，通过ls -al命令我们发现文件的所有人以及组内用户都是合理的。如果之前public文件位置与此不符，就需要对nginx配置文件进行调整。 5.2.3 更新项目仓库actions文件 在gh-pages.yml文件中添加以下模块，并根据实际情况做一些修改，注意yaml文件的格式。 - name: Deploy Tencent Cloud uses: wlixcc/SFTP-Deploy-Action@v1.2.4 with: username: 'root' #ssh user name server: '${{ secrets.SERVER_IP }}' #引用之前创建好的secret ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} #引用之前创建好的secret local_path: './public' # 对应我们项目public的文件夹路径，注意不能访问内部文件，因为此处没有令牌 remote_path: '/home/username/' # 对应云上的目录 等待片刻，观察工作流正常，进入云主机对应文件夹，发现文件已更新，同时权限正确。至此，github actions云部署完成。 ","date":"2022-09-13","objectID":"/blogstory/:5:2","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":[],"content":"6. 结语 这次经历让我意识到，弯路，也是成长的一部分；同时，在项目中的学习效率是非常高的，当然还需要不断更新信息搜集算法。这篇文章会在后面慢慢丰富，形成一篇合格的教程。 ","date":"2022-09-13","objectID":"/blogstory/:6:0","tags":[],"title":"BlogStory","uri":"/blogstory/"},{"categories":null,"content":"About Me","date":"2021-08-02","objectID":"/about/","tags":null,"title":"About Me","uri":"/about/"},{"categories":null,"content":"关于本人 ID：waitingFor，意为：为理想脚踏实地，永不言弃😀. 始终秉持的一种态度——“Life is a beautiful story”，热爱你的生活~~（有点鸡汤的味道哈哈，不过却很真实）。 头像这东西对于我来说是一种心性的体现吧，所以从某种意义上说可以从我的头像变化历程看出我的成长🧐。 SHUer，CS爱好者，to be a FDUer. 在成长的路上努力成为一名合格的软件工程师与终身学习者，目标是全栈 ( •̀ ω •́ )✧. ","date":"2021-08-02","objectID":"/about/:1:0","tags":null,"title":"About Me","uri":"/about/"},{"categories":null,"content":"关于爱好 中度颜控中二青年，晚睡早起养生学家，始终在探寻摸🐟与反摸🐟的真谛. 前MOBA、三国杀重度玩家，未来可能会进军P社🐱‍🏍. 后摇、电音、民谣、华语流行等多风格音乐爱好者，节奏派，可以来找我网抑 doge. 平时话不多，但一旦聊开就停不下来哈哈，欢迎来找我唠嗑 (●’◡’●). ","date":"2021-08-02","objectID":"/about/:2:0","tags":null,"title":"About Me","uri":"/about/"},{"categories":["documentation"],"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it.","date":"2020-03-06","objectID":"/index.en/","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"Discover what the Hugo - LoveIt theme is all about and the core-concepts behind it. ","date":"2020-03-06","objectID":"/index.en/:0:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"1 Requirements Thanks to the simplicity of Hugo, Hugo is the only dependency of this theme. Just install latest version of  Hugo (\u003e 0.62.0) for your OS (Windows, Linux, macOS). Why not support earlier versions of Hugo? Since Markdown Render Hooks was introduced in the Hugo Christmas Edition, this theme only supports Hugo versions above 0.62.0. Hugo extended version is recommended Since some features of this theme need to processes  SCSS to  CSS, it is recommended to use Hugo extended version for better experience. ","date":"2020-03-06","objectID":"/index.en/:1:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"2 Installation The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners. ","date":"2020-03-06","objectID":"/index.en/:2:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"2.1 Create Your Project Hugo provides a new command to create a new website: hugo new site my_website cd my_website ","date":"2020-03-06","objectID":"/index.en/:2:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"2.2 Install the Theme The LoveIt theme’s repository is: https://github.com/dillonzq/LoveIt. You can download the latest release  .zip file of the theme and extract it in the themes directory. Alternatively, clone this repository to the themes directory: git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt Or, create an empty git repository and make this repository a submodule of your site directory: git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt ","date":"2020-03-06","objectID":"/index.en/:2:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"2.3 Basic Configuration The following is a basic configuration for the LoveIt theme: baseURL = \"http://example.org/\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" # website title title = \"My New Hugo Site\" # language code [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"en\" # language name [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"English\" # Author config [author] name = \"xxxx\" email = \"\" link = \"\" # Menu config [menu] [[menu.main]] weight = 1 identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" # Markup related configuration in Hugo [markup] # Syntax Highlighting (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false is a necessary configuration (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false 注意 When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. ","date":"2020-03-06","objectID":"/index.en/:2:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"2.4 Create Your First Post Here is the way to create your first post: hugo new posts/first_post.md Feel free to edit the post file by adding some sample content and replacing the title value in the beginning of the file. 注意 By default all posts and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata, set the property draft: false or add -D/--buildDrafts parameter to hugo command. ","date":"2020-03-06","objectID":"/index.en/:2:4","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"2.5 Launching the Website Locally Launch by using the following command: hugo serve Go to http://localhost:1313. Basic configuration preview 技巧 When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. 注意 Since the theme use .Scratch in Hugo to implement some features, it is highly recommended that you add --disableFastRender parameter to hugo server command for the live preview of the page you are editing. hugo serve --disableFastRender ","date":"2020-03-06","objectID":"/index.en/:2:5","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"2.6 Build the Website When your site is ready to deploy, run the following command: hugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server. 技巧 The website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use AWS Amplify, Github pages, Render and more… ","date":"2020-03-06","objectID":"/index.en/:2:6","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"3 Configuration ","date":"2020-03-06","objectID":"/index.en/:3:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"3.1 Site Configuration In addition to Hugo global configuration and menu configuration, LoveIt lets you define the following parameters in your site configuration (here is a config.toml, whose values are default). Please open the code block below to view the complete sample configuration : baseURL = \"http://example.org/\" # Change the default theme to be use when building the site with Hugo theme = \"LoveIt\" # website title title = \"My New Hugo Site\" # language code [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"en\" # language name [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"English\" # whether to include Chinese/Japanese/Korean hasCJKLanguage = false # default amount of posts in each pages paginate = 12 # google analytics code [UA-XXXXXXXX-X] googleAnalytics = \"\" # copyright description used only for seo schema copyright = \"\" # whether to use robots.txt enableRobotsTXT = true # whether to use git commit log enableGitInfo = true # whether to use emoji code enableEmoji = true # ignore some build errors ignoreErrors = [\"error-remote-getjson\", \"error-missing-instagram-accesstoken\"] # Author config [author] name = \"xxxx\" email = \"\" link = \"\" # Menu config [menu] [[menu.main]] weight = 1 identifier = \"posts\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" name = \"Posts\" url = \"/posts/\" # title will be shown when you hover on this menu link title = \"\" [[menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" [params] # site default theme [\"auto\", \"light\", \"dark\"] defaultTheme = \"auto\" # public git repo url only then enableGitInfo is true gitRepo = \"\" # which hash function used for SRI, when empty, no SRI is used # [\"sha256\", \"sha384\", \"sha512\", \"md5\"] fingerprint = \"\" # date format dateFormat = \"2006-01-02\" # website title for Open Graph and Twitter Cards title = \"My cool site\" # website description for RSS, SEO, Open Graph and Twitter Cards description = \"This is my cool site\" # website images for Open Graph and Twitter Cards images = [\"/logo.png\"] # Header config [params.header] # desktop header mode [\"fixed\", \"normal\", \"auto\"] desktopMode = \"fixed\" # mobile header mode [\"fixed\", \"normal\", \"auto\"] mobileMode = \"auto\" # Header title config [params.header.title] # URL of the LOGO logo = \"\" # title name name = \"\" # you can add extra information before the name (HTML format is supported), such as icons pre = \"\" # you can add extra information after the name (HTML format is supported), such as icons post = \"\" # whether to use typeit animation for title name typeit = false # Footer config [params.footer] enable = true # Custom content (HTML format is supported) custom = '' # whether to show Hugo and theme info hugo = true # whether to show copyright info copyright = true # whether to show the author author = true # Site creation time since = 2019 # ICP info only in China (HTML format is supported) icp = \"\" # license info (HTML format is supported) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (all posts) page config [params.section] # special amount of posts in each section page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # List (category or tag) page config [params.list] # special amount of posts in each list page paginate = 20 # date format (month and day) dateFormat = \"01-02\" # amount of RSS pages rss = 10 # App icon config [params.app] # optional site title override for the app when added to an iOS home screen or Android launcher title = \"My cool site\" # whether to omit favicon resource links noFavicon = false # modern SVG favicon to use","date":"2020-03-06","objectID":"/index.en/:3:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"3.2 Favicons, Browserconfig, Manifest It is recommended to put your own favicons: apple-touch-icon.png (180x180) favicon-32x32.png (32x32) favicon-16x16.png (16x16) mstile-150x150.png (150x150) android-chrome-192x192.png (192x192) android-chrome-512x512.png (512x512) into /static. They’re easily created via https://realfavicongenerator.net/. Customize browserconfig.xml and site.webmanifest to set theme-color and background-color. ","date":"2020-03-06","objectID":"/index.en/:3:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"3.3 Style Customization 注意 Hugo extended version is necessary for the style customization. LoveIt theme has been built to be as configurable as possible by defining custom .scss style files. The directory including the custom .scss style files is assets/css relative to your project root directory. In assets/css/_override.scss, you can override the variables in themes/LoveIt/assets/css/_variables.scss to customize the style. Here is a example: @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; In assets/css/_custom.scss, you can add some css style code to customize the style. ","date":"2020-03-06","objectID":"/index.en/:3:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"4 Multilingual and i18n LoveIt theme is fully compatible with Hugo multilingual mode, which provides in-browser language switching. Language Switch ","date":"2020-03-06","objectID":"/index.en/:4:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"4.1 Compatibility Language Hugo Code HTML lang Attribute Theme Docs Lunr.js Support English en en Simplified Chinese zh-cn zh-CN Traditional Chinese zh-tw zh-TW French fr fr Polish pl pl Brazilian Portuguese pt-br pt-BR Italian it it Spanish es es German de de German de de Serbian sr sr Russian ru ru Romanian ro ro Vietnamese vi vi Arabic ar ar Catalan ca ca Thai th th Telugu te te Indonesian id id Turkish tr tr Korean ko ko Hindi hi hi ","date":"2020-03-06","objectID":"/index.en/:4:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"4.2 Basic Configuration After learning how Hugo handle multilingual websites, define your languages in your site configuration. For example with English, Chinese and French website: # determines default content language [\"en\", \"zh-cn\", \"fr\", \"pl\", ...] defaultContentLanguage = \"en\" [languages] [languages.en] weight = 1 title = \"My New Hugo Site\" languageCode = \"en\" languageName = \"English\" [[languages.en.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts/\" title = \"\" [[languages.en.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" title = \"\" [[languages.en.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" [languages.zh-cn] weight = 2 title = \"我的全新 Hugo 网站\" languageCode = \"zh-CN\" languageName = \"简体中文\" hasCJKLanguage = true [[languages.zh-cn.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"文章\" url = \"/posts/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" [[languages.zh-cn.menu.main]] weight = 3 identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" [languages.fr] weight = 3 title = \"Mon nouveau site Hugo\" languageCode = \"fr\" languageName = \"Français\" [[languages.fr.menu.main]] weight = 1 identifier = \"posts\" pre = \"\" post = \"\" name = \"Postes\" url = \"/posts/\" title = \"\" [[languages.fr.menu.main]] weight = 2 identifier = \"tags\" pre = \"\" post = \"\" name = \"Balises\" url = \"/tags/\" title = \"\" [[languages.fr.menu.main]] weight = 3 identifier = \"categories\" name = \"Catégories\" pre = \"\" post = \"\" url = \"/categories/\" title = \"\" Then, for each new page, append the language code to the file name. Single file my-page.md is split in three files: in English: my-page.en.md in Chinese: my-page.zh-cn.md in French: my-page.fr.md 注意 Be aware that only translated pages are displayed in menu. It’s not replaced with default language content. 技巧 Use Front Matter parameter to translate urls too. ","date":"2020-03-06","objectID":"/index.en/:4:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"4.3 Overwrite Translation Strings Translations strings are used for common default values used in the theme. Translations are available in some languages, but you may use another language or want to override default values. To override these values, create a new file in your local i18n folder i18n/\u003clanguageCode\u003e.toml and inspire yourself from themes/LoveIt/i18n/en.toml. By the way, as these translations could be used by other people, please take the time to propose a translation by  making a PR to the theme! ","date":"2020-03-06","objectID":"/index.en/:4:3","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"5 Search Based on Lunr.js or algolia, searching is supported in LoveIt theme. ","date":"2020-03-06","objectID":"/index.en/:5:0","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"5.1 Output Configuration In order to generate index.json for searching, add JSON output file type to the home of the outputs part in your site configuration. [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] ","date":"2020-03-06","objectID":"/index.en/:5:1","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"},{"categories":["documentation"],"content":"5.2 Search Configuration Based on index.json generated by Hugo, you could activate searching. Here is the search configuration in your site configuration: [params.search] enable = true # type of search engine [\"lunr\", \"algolia\"] type = \"lunr\" # max index length of the chunked content contentLength = 4000 # placeholder of the search bar placeholder = \"\" # max number of results length maxResultLength = 10 # snippet length of the result snippetLength = 30 # HTML tag name of the highlight part in results highlightTag = \"em\" # whether to use the absolute URL based on the baseURL in search index absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" How to choose search engine? The following is a comparison of two search engines: lunr: simple, no need to synchronize index.json, no limit for contentLength, but high bandwidth and low performance (Especially for Chinese which needs a large segmentit library) algolia: high performance and low bandwidth, but need to synchronize index.json and limit for contentLength The content of the post is separated by h2 and h3 HTML tag to improve query performance and basically implement full-text search. contentLength is used to limit the max index length of the part starting with h2 and h3 HTML tag. Tips about algolia You need to upload index.json files to algolia to activate searching. You could upload the index.json files by browsers but a CLI tool may be better. The official Algolia CLI is a good choice. To be compatible with Hugo multilingual mode, you need to upload different index.json for each language to the different index of algolia, such as zh-cn/index.json or fr/index.json… ","date":"2020-03-06","objectID":"/index.en/:5:2","tags":["installation","configuration"],"title":"Theme Documentation - Basics","uri":"/index.en/"}]